{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home Introduction My name is Seung Jun. This site has a collection of my notes, ranging from A to B to C. History Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse vehicula augue hendrerit tellus placerat facilisis. Nam laoreet felis risus, vel cursus libero dapibus in. Nulla gravida erat nec odio venenatis lacinia. Nunc ut sem tortor. Sed arcu mauris, interdum et neque eget, porta semper magna. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla a orci imperdiet, aliquam nisl sed, efficitur urna. Aenean ac lorem nec ipsum faucibus euismod. Donec fermentum consequat maximus. Donec pellentesque odio eget justo vulputate ultrices. Maecenas id pretium turpis. Donec elit dolor, commodo pharetra sodales ut, hendrerit gravida nisi. Donec id tortor consequat, vehicula elit id, hendrerit dolor. Morbi ut posuere mauris. Morbi viverra felis et feugiat rhoncus. Fusce sed placerat arcu, nec mollis nibh. Pellentesque volutpat nulla ut nisl suscipit, vitae mattis turpis ultricies. Etiam suscipit lacus eget lacus lobortis dictum. Morbi consectetur arcu quis commodo cursus. Proin rutrum suscipit quam a vulputate. In pretium eget leo vel euismod. Quisque ut congue justo. Nunc facilisis eleifend sodales. Ut eu justo et metus faucibus aliquam in eu lorem. Suspendisse ut aliquet nisi. Nunc tempus malesuada nisl, ut iaculis leo auctor laoreet. Future Sed mattis arcu eget ex dapibus, gravida rutrum turpis consequat. Maecenas scelerisque tempus mauris vel euismod. In vel varius dolor, id laoreet mauris. Suspendisse id volutpat ante. Proin bibendum dictum lacus, vitae volutpat dolor maximus nec. Integer in hendrerit tellus, in semper augue. Phasellus pulvinar vestibulum ultrices. Nunc ornare sem vitae leo faucibus, ut cursus lectus tristique. Donec nec mollis orci. Etiam ultricies nisi justo, et tristique tortor iaculis sed. Nulla facilisi. Aliquam quis enim sit amet nulla malesuada mollis. Suspendisse blandit dolor est, sed rhoncus est mattis sit amet. Duis facilisis ornare erat, sit amet interdum est euismod non. Sed eget dapibus arcu. Proin et porta erat. Quisque eu suscipit nulla. Vivamus a eros a justo semper dapibus vitae vel massa. Curabitur orci augue, consequat ut lacus auctor, vestibulum vulputate sapien. Cras posuere aliquam nisi sed laoreet. Integer sit amet augue lacus. Quisque facilisis gravida erat ut auctor. Sed eu tempus odio. Nunc felis est, tincidunt luctus nunc in, finibus molestie elit. Nullam nisi lacus, sagittis et risus quis, posuere volutpat urna. Cras id mollis turpis. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Nulla diam augue, lobortis at auctor vel, gravida et ante. Nam ultrices magna ac aliquam pretium. Donec laoreet tristique quam vitae varius.","title":"Home"},{"location":"#home","text":"","title":"Home"},{"location":"#introduction","text":"My name is Seung Jun. This site has a collection of my notes, ranging from A to B to C.","title":"Introduction"},{"location":"#history","text":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse vehicula augue hendrerit tellus placerat facilisis. Nam laoreet felis risus, vel cursus libero dapibus in. Nulla gravida erat nec odio venenatis lacinia. Nunc ut sem tortor. Sed arcu mauris, interdum et neque eget, porta semper magna. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla a orci imperdiet, aliquam nisl sed, efficitur urna. Aenean ac lorem nec ipsum faucibus euismod. Donec fermentum consequat maximus. Donec pellentesque odio eget justo vulputate ultrices. Maecenas id pretium turpis. Donec elit dolor, commodo pharetra sodales ut, hendrerit gravida nisi. Donec id tortor consequat, vehicula elit id, hendrerit dolor. Morbi ut posuere mauris. Morbi viverra felis et feugiat rhoncus. Fusce sed placerat arcu, nec mollis nibh. Pellentesque volutpat nulla ut nisl suscipit, vitae mattis turpis ultricies. Etiam suscipit lacus eget lacus lobortis dictum. Morbi consectetur arcu quis commodo cursus. Proin rutrum suscipit quam a vulputate. In pretium eget leo vel euismod. Quisque ut congue justo. Nunc facilisis eleifend sodales. Ut eu justo et metus faucibus aliquam in eu lorem. Suspendisse ut aliquet nisi. Nunc tempus malesuada nisl, ut iaculis leo auctor laoreet.","title":"History"},{"location":"#future","text":"Sed mattis arcu eget ex dapibus, gravida rutrum turpis consequat. Maecenas scelerisque tempus mauris vel euismod. In vel varius dolor, id laoreet mauris. Suspendisse id volutpat ante. Proin bibendum dictum lacus, vitae volutpat dolor maximus nec. Integer in hendrerit tellus, in semper augue. Phasellus pulvinar vestibulum ultrices. Nunc ornare sem vitae leo faucibus, ut cursus lectus tristique. Donec nec mollis orci. Etiam ultricies nisi justo, et tristique tortor iaculis sed. Nulla facilisi. Aliquam quis enim sit amet nulla malesuada mollis. Suspendisse blandit dolor est, sed rhoncus est mattis sit amet. Duis facilisis ornare erat, sit amet interdum est euismod non. Sed eget dapibus arcu. Proin et porta erat. Quisque eu suscipit nulla. Vivamus a eros a justo semper dapibus vitae vel massa. Curabitur orci augue, consequat ut lacus auctor, vestibulum vulputate sapien. Cras posuere aliquam nisi sed laoreet. Integer sit amet augue lacus. Quisque facilisis gravida erat ut auctor. Sed eu tempus odio. Nunc felis est, tincidunt luctus nunc in, finibus molestie elit. Nullam nisi lacus, sagittis et risus quis, posuere volutpat urna. Cras id mollis turpis. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Nulla diam augue, lobortis at auctor vel, gravida et ante. Nam ultrices magna ac aliquam pretium. Donec laoreet tristique quam vitae varius.","title":"Future"},{"location":"AlgorithmicProblems/","text":"Algorithimic Problems Categories Common problems Prime number check or generation Palindromes GCD Data Structures Problems that need novel data structures. Not all problems are leetcode-friendly. https://blog.bytebytego.com/p/algorithms-you-should-know-before https://news.ycombinator.com/item?id=32186203 Union-find data structure (a.k.a. disjoint-set data structure) Bloom filter Backtracking Sudoku Solver N-queen Placement Tricks Rotate Matrix There are two variations of this problem. If memory is not limited, you can simply translate the coordinates. To translate them, observe the two things: Rows become columns, and vice versa. They may need to be reversed as well. def transform_90 ( s ): n = len ( s ) t = [[ 0 for i in range ( n )] for j in range ( n )] for r in range ( n ): for c in range ( n ): t [ c , n - 1 - r ] = s [ r , c ] return t If memory is limited to O(1), you need to rotate the matrix in place. To do that, you iterate the matrix \"ring\" by \"ring\". def transform_90 ( s ): n = len ( s ) # For each \"ring\" for k in range ( n // 2 ): l = n - 1 - k # i is the offset from the cornor. for i in range ( n - 2 * k ): t = s [ k + i ][ l ] s [ k + i ][ l ] = s [ k ][ k + i ] s [ k ][ k + i ] = s [ l - i ][ k ] s [ l - i ][ k ] = s [ l ][ l - i ] s [ l ][ l - i ] = t Find the overlap of two internvals It is easy to extend this concept to the overlapping area of two rectangles . from dataclasses import dataclass from typing import Optional @dataclass class Interval : s : int t : int def find_overlap ( i : Interval , j : Interval ) -> Optional [ Interval ]: s = max ( i . s , j . s ) t = min ( i . t , j . t ) return Interval ( s , t ) if s < t else None >>> find_overlap ( Interval ( 3 , 8 ), Interval ( 5 , 9 )) Interval ( a = 5 , b = 8 ) Merge intervals It can be done in the linear time. Sort by start time and go over in order. BFS/DFS @dataclass class State : state : int to_visit = deque ([ State ( 0 )]) visited = set () while to_visit : v = to_visit . pop () # or popleft() for BFS if v in visited : continue visited . add ( v ) # visit v (usually, it means determining if the goal has been reached) for n in v . neighbors (): to_visit . append ( n ) Pour water from bucket A to B The first step is to determine how much can be transferred. @dataclass class Bucket : capacity : int amount : int def pour ( a , b ): amt = min ( a . amount , b . capacity - b . amount ) a . amount -= amt b . amount += amt","title":"Algorithimic Problems"},{"location":"AlgorithmicProblems/#algorithimic-problems","text":"","title":"Algorithimic Problems"},{"location":"AlgorithmicProblems/#categories","text":"","title":"Categories"},{"location":"AlgorithmicProblems/#common-problems","text":"Prime number check or generation Palindromes GCD","title":"Common problems"},{"location":"AlgorithmicProblems/#data-structures","text":"Problems that need novel data structures. Not all problems are leetcode-friendly. https://blog.bytebytego.com/p/algorithms-you-should-know-before https://news.ycombinator.com/item?id=32186203 Union-find data structure (a.k.a. disjoint-set data structure) Bloom filter","title":"Data Structures"},{"location":"AlgorithmicProblems/#backtracking","text":"Sudoku Solver N-queen Placement","title":"Backtracking"},{"location":"AlgorithmicProblems/#tricks","text":"","title":"Tricks"},{"location":"AlgorithmicProblems/#rotate-matrix","text":"There are two variations of this problem. If memory is not limited, you can simply translate the coordinates. To translate them, observe the two things: Rows become columns, and vice versa. They may need to be reversed as well. def transform_90 ( s ): n = len ( s ) t = [[ 0 for i in range ( n )] for j in range ( n )] for r in range ( n ): for c in range ( n ): t [ c , n - 1 - r ] = s [ r , c ] return t If memory is limited to O(1), you need to rotate the matrix in place. To do that, you iterate the matrix \"ring\" by \"ring\". def transform_90 ( s ): n = len ( s ) # For each \"ring\" for k in range ( n // 2 ): l = n - 1 - k # i is the offset from the cornor. for i in range ( n - 2 * k ): t = s [ k + i ][ l ] s [ k + i ][ l ] = s [ k ][ k + i ] s [ k ][ k + i ] = s [ l - i ][ k ] s [ l - i ][ k ] = s [ l ][ l - i ] s [ l ][ l - i ] = t","title":"Rotate Matrix"},{"location":"AlgorithmicProblems/#find-the-overlap-of-two-internvals","text":"It is easy to extend this concept to the overlapping area of two rectangles . from dataclasses import dataclass from typing import Optional @dataclass class Interval : s : int t : int def find_overlap ( i : Interval , j : Interval ) -> Optional [ Interval ]: s = max ( i . s , j . s ) t = min ( i . t , j . t ) return Interval ( s , t ) if s < t else None >>> find_overlap ( Interval ( 3 , 8 ), Interval ( 5 , 9 )) Interval ( a = 5 , b = 8 )","title":"Find the overlap of two internvals"},{"location":"AlgorithmicProblems/#merge-intervals","text":"It can be done in the linear time. Sort by start time and go over in order.","title":"Merge intervals"},{"location":"AlgorithmicProblems/#bfsdfs","text":"@dataclass class State : state : int to_visit = deque ([ State ( 0 )]) visited = set () while to_visit : v = to_visit . pop () # or popleft() for BFS if v in visited : continue visited . add ( v ) # visit v (usually, it means determining if the goal has been reached) for n in v . neighbors (): to_visit . append ( n )","title":"BFS/DFS"},{"location":"AlgorithmicProblems/#pour-water-from-bucket-a-to-b","text":"The first step is to determine how much can be transferred. @dataclass class Bucket : capacity : int amount : int def pour ( a , b ): amt = min ( a . amount , b . capacity - b . amount ) a . amount -= amt b . amount += amt","title":"Pour water from bucket A to B"},{"location":"Anki/","text":"Anki Collection > decks > notes > cards Related cards from the same note are called siblings . A note consists of fields. Bury: postpone for today Suspend: postpone forever {{c1::answer::hint}} to give a hint in cloze deletions. Clean up unused tags by running Tools > Check Database . Keep the number of decks small. Decks shouldn't be too specialized. To organize cards, you can use the following. Use tags Use custom study Use filtered deck Three due card numbers Blue - new Red - learning Green - reviewing A card goes through two phases: Learning and reviewing. Learning cards give you three choices: again, good, easy Answering \"again\" puts it back to the first step. Answering \"good\" moves it to the next step. Answering \"easy\" promotes it to reviewing. Reviewing cards give you four choices: again, hard, good, easy Choosing \"again\" for a reviewing card make it lapsed . \"hard\", \"good\", \"easy\" increased the next interval to a different degree. Scheduling parameters Learning Steps - learning cards have manual steps. After going through all steps, a card becomes reviewing. Graduating interval - initial interval for normally promoted cards Easy interval - initial interval for \"easy\" cards Starting ease (250% by default) - multiplier to the interval Reviewing Easy bonus Interval modifier Lapses (relearning) Steps New interval - the new interval is determined at the time of \"again\". It doesn't matter how the lapsed card goes through steps. leeches - the problematic cards becomes suspended (or tagged).","title":"Anki"},{"location":"Anki/#anki","text":"Collection > decks > notes > cards Related cards from the same note are called siblings . A note consists of fields. Bury: postpone for today Suspend: postpone forever {{c1::answer::hint}} to give a hint in cloze deletions. Clean up unused tags by running Tools > Check Database . Keep the number of decks small. Decks shouldn't be too specialized. To organize cards, you can use the following. Use tags Use custom study Use filtered deck Three due card numbers Blue - new Red - learning Green - reviewing A card goes through two phases: Learning and reviewing. Learning cards give you three choices: again, good, easy Answering \"again\" puts it back to the first step. Answering \"good\" moves it to the next step. Answering \"easy\" promotes it to reviewing. Reviewing cards give you four choices: again, hard, good, easy Choosing \"again\" for a reviewing card make it lapsed . \"hard\", \"good\", \"easy\" increased the next interval to a different degree. Scheduling parameters Learning Steps - learning cards have manual steps. After going through all steps, a card becomes reviewing. Graduating interval - initial interval for normally promoted cards Easy interval - initial interval for \"easy\" cards Starting ease (250% by default) - multiplier to the interval Reviewing Easy bonus Interval modifier Lapses (relearning) Steps New interval - the new interval is determined at the time of \"again\". It doesn't matter how the lapsed card goes through steps. leeches - the problematic cards becomes suspended (or tagged).","title":"Anki"},{"location":"Cloud/","text":"Cloud Google Cloud Platform Products Identity-Aware Proxy \"lets you manage who has access to services hosted on App Engine, Compute Engine, or an HTTPS Load Balancer.\" Load Balancer (for HTTP(S), TCP, and UDP) Cloud Composer - managed Apache Airflow Data Fusion - GUI-based ETL tool Dataprep - another visual ETL tool Dataflow - managed Apache Beam Dataproc - managed Spark and Hadoop Data Catalog - metadata management service Data Studio Identity and Access Management (IAM) IAM Glossary A member can be a user, a service account, or a group. A group consists of members. A role is given a set of permissions . A member is given a role. A member cannot be given permissions directly. Project IAM List project roles and members: gcloud projects get-iam-policy PROJECT_ID Grant a role to a member: ## type := user | serviceAccount | group ## member := $type:EMAIL ## role = roles/<predefined-role-name> | projects/<project-name>/roles/<custom-role-name> gcloud projects add-iam-policy-binding PROJECT_ID --member = $member --role = $role Roles and Permissions Given a role, list all permissions ## Pre-defined roles gcloud iam roles describe roles/editor ## Project-specific roles gcloud iam roles describe --project ts-quantsource TS.AlphaStudio.Developer References: * Permission to roles * Role to permissions Members and Roles Given a member (user, service account, or group) in an project, list all roles ## Note $MEMBER is partial match. PROJECT=ts-quantsource MEMBER=beirut-server@ts-quantsource.iam.gserviceaccount.com gcloud projects get-iam-policy $PROJECT --flatten=\"bindings[].members\" --format='table(bindings.members,bindings.role)' --filter=\"bindings.members:$MEMBER\" Given a role in a project, list all members ## Note $ROLE is partial match. gcloud projects get-iam-policy $PROJECT --flatten=\"bindings[].members\" --format=\"table(bindings.role,bindings.members)\" --filter=\"bindings.role:$ROLE\" Storage IAM List permissions on a storage bucket: gsutil iam get gs://<bucket> Grant a permission. Use -d in front of a binding to delete. ## member := user | serviceAccount | group | ... ## role := objectViewer | objectWriter ## binding := $member:EMAIL:$role gsutil iam ch $binding [ $binding ... ] gs://BUCKET_NAME BigQuery IAM List dataset permissions bq show --format=prettyjson PROJECT_ID:DATASET List table permissions (we don't do table-level permissioning) bq get-iam-policy PROJECT_ID:DATASET.TABLE Update permissions. There gotta be a better way. bq show --format=prettyjson PROJECT_ID:DATASET > JSON vi JSON bq update --source JSON PROJECT_ID:DATASET Group Management Given a domain, list all groups ??? Given a group, list members gcloud identity groups memberships list --group-email as-admins@alphastudio.com --format 'table(preferredMemberKey.id)' Given a member, list all groups ??? GCP Training on Infrastructure Instructor: michaelabel@google.com Introduction region - physical data center zone - separate configuration within a data center https://cloud.google.com/about/locations/ Data centers use 2% of global energy. The Cloud industry needs to be eco-friendly. Organization -> Folder (nested) -> Project -> Resource (VM, storage, etc.) Billing is done at the project level. When permission rules are conflicting (say, between resource-level and project-level), the least restrictive rule applies. Google claims that it gives more flexibility. It can be risky from a security perspective. Identity Access Management (IAM) IAM roles - collections of related permissions (service, resource, verb) Users get roles on specific items in the resource hierarchy. Primitive roles (owner/editor/viewer | billing admin) Predefined roles (for a particular service) Custom roles VM gcloud compute ssh <name> Storage Classes: multi-regional, regional, nearline, coldline Bigtables: ~ HBase. Managed No-SQL Cloud SQL: Managed RDBMS MySQL or PostgreSQL PostgreSQL - up to 30 TB Cloud Spanner - better scalability than Cloud SQL You can make a bucket item world-readable and have it available on the web. gsutil acl ch -u allUsers:R gs://$DEVSHELL_PROJECT_ID/my-excellent-blog.png Available at https://storage.googleapis.com/qwiklabs-gcp-00-29a6802e787e/my-excellent-blog.png K8S Kubernetes (open source) and Kubernetes Engine (GCP product) Google Container Registry Pod - a set of running containers Anthos (hybrid - managed K8S and GKE on-prem) App Engine App Engine Standard App Engine Flexible Cloud Endpoints Apigee Edge - monetize APIs Big Data and Machine Learning Dataproc - Hadoop and Spark Dataflow - ETL, orchestration, exactly-once ordered processing of streaming data BigQuery - pretty expensive PubSub - messages live up to 7 days Google Cloud AI Platform Notebooks - sort of replacing Datalab BigQuery A dataset is a namespace that holds zero or more tables. GCP Training on Big Data and Machine Learning Organization -> folders -> projects -> resources Billing is done on the project level. Not all services are available on all sites. https://cloud.google.com/about/locations Dataflow ~ Apache Beam Dataprep - cleaning and transforming UI tool Dataproc ~ managed Hadoop or Spark Bigtable ~ HBase Colossus - underlying BigQuery $5 per TB. The first TB is free every month. cloud.google.com/customers BigQuery is a petabyte storage while Storage is an exobyte storage. RankBrain (ML for search ranking) Petabyte cross-site bisectional network bandwidth - enable separation between compute and storage Preemptible VMs - 80% cheaper than permanent VMs ALS with PySpark Is our data big enough to use BigQuery? Dataproc PySpark Matrix factorization - used in recommendation system. ALS (alternating least squares) - used for matrix fatorization BigQuery Petabyte storage Petabyte bisectional bandwidth between storage and query services. Dataset - holder for tables Federated query? Supports streaming. No UI support, however. A few seconds latency. For streaming, use BigQuery directly for ELT or Dataflow for ETL? STRUCT and ARRAY GIS capability (ST_GeogPoint(longitude, latitude)) Storage Service Column-oriented? Uses Colossus as storage Supports both bulk and streaming ingest Query Service Web UI CLI: bq Rest API ML features label (continuous or discrete) - what you want to predict (i.e., output) model = function from features to label example = observation ROC AUC playground.tensorflow.org Containers on cargo to predict economic numbers. BQML Write machine learning models with SQL Pub/Sub topic / subscription / subscriber Each subscription receives every message on the topic. Not all subscribers receive every message from subscription. At-least-once delivery push and pull - between subscription and subscribers Dataflow Apache Beam. DAG executor. github.com/Google.../...templates Java, Python, and Go. p = Pipeline.create() p.apply(...) p.apply(...) ... p.run() Data Studio Dashboard","title":"Cloud"},{"location":"Cloud/#cloud","text":"","title":"Cloud"},{"location":"Cloud/#google-cloud-platform","text":"","title":"Google Cloud Platform"},{"location":"Cloud/#products","text":"Identity-Aware Proxy \"lets you manage who has access to services hosted on App Engine, Compute Engine, or an HTTPS Load Balancer.\" Load Balancer (for HTTP(S), TCP, and UDP) Cloud Composer - managed Apache Airflow Data Fusion - GUI-based ETL tool Dataprep - another visual ETL tool Dataflow - managed Apache Beam Dataproc - managed Spark and Hadoop Data Catalog - metadata management service Data Studio","title":"Products"},{"location":"Cloud/#identity-and-access-management-iam","text":"","title":"Identity and Access Management (IAM)"},{"location":"Cloud/#iam-glossary","text":"A member can be a user, a service account, or a group. A group consists of members. A role is given a set of permissions . A member is given a role. A member cannot be given permissions directly.","title":"IAM Glossary"},{"location":"Cloud/#project-iam","text":"List project roles and members: gcloud projects get-iam-policy PROJECT_ID Grant a role to a member: ## type := user | serviceAccount | group ## member := $type:EMAIL ## role = roles/<predefined-role-name> | projects/<project-name>/roles/<custom-role-name> gcloud projects add-iam-policy-binding PROJECT_ID --member = $member --role = $role","title":"Project IAM"},{"location":"Cloud/#roles-and-permissions","text":"Given a role, list all permissions ## Pre-defined roles gcloud iam roles describe roles/editor ## Project-specific roles gcloud iam roles describe --project ts-quantsource TS.AlphaStudio.Developer References: * Permission to roles * Role to permissions","title":"Roles and Permissions"},{"location":"Cloud/#members-and-roles","text":"Given a member (user, service account, or group) in an project, list all roles ## Note $MEMBER is partial match. PROJECT=ts-quantsource MEMBER=beirut-server@ts-quantsource.iam.gserviceaccount.com gcloud projects get-iam-policy $PROJECT --flatten=\"bindings[].members\" --format='table(bindings.members,bindings.role)' --filter=\"bindings.members:$MEMBER\" Given a role in a project, list all members ## Note $ROLE is partial match. gcloud projects get-iam-policy $PROJECT --flatten=\"bindings[].members\" --format=\"table(bindings.role,bindings.members)\" --filter=\"bindings.role:$ROLE\"","title":"Members and Roles"},{"location":"Cloud/#storage-iam","text":"List permissions on a storage bucket: gsutil iam get gs://<bucket> Grant a permission. Use -d in front of a binding to delete. ## member := user | serviceAccount | group | ... ## role := objectViewer | objectWriter ## binding := $member:EMAIL:$role gsutil iam ch $binding [ $binding ... ] gs://BUCKET_NAME","title":"Storage IAM"},{"location":"Cloud/#bigquery-iam","text":"List dataset permissions bq show --format=prettyjson PROJECT_ID:DATASET List table permissions (we don't do table-level permissioning) bq get-iam-policy PROJECT_ID:DATASET.TABLE Update permissions. There gotta be a better way. bq show --format=prettyjson PROJECT_ID:DATASET > JSON vi JSON bq update --source JSON PROJECT_ID:DATASET","title":"BigQuery IAM"},{"location":"Cloud/#group-management","text":"Given a domain, list all groups ??? Given a group, list members gcloud identity groups memberships list --group-email as-admins@alphastudio.com --format 'table(preferredMemberKey.id)' Given a member, list all groups ???","title":"Group Management"},{"location":"Cloud/#gcp-training-on-infrastructure","text":"Instructor: michaelabel@google.com","title":"GCP Training on Infrastructure"},{"location":"Cloud/#introduction","text":"region - physical data center zone - separate configuration within a data center https://cloud.google.com/about/locations/ Data centers use 2% of global energy. The Cloud industry needs to be eco-friendly. Organization -> Folder (nested) -> Project -> Resource (VM, storage, etc.) Billing is done at the project level. When permission rules are conflicting (say, between resource-level and project-level), the least restrictive rule applies. Google claims that it gives more flexibility. It can be risky from a security perspective. Identity Access Management (IAM) IAM roles - collections of related permissions (service, resource, verb) Users get roles on specific items in the resource hierarchy. Primitive roles (owner/editor/viewer | billing admin) Predefined roles (for a particular service) Custom roles","title":"Introduction"},{"location":"Cloud/#vm","text":"gcloud compute ssh <name>","title":"VM"},{"location":"Cloud/#storage","text":"Classes: multi-regional, regional, nearline, coldline Bigtables: ~ HBase. Managed No-SQL Cloud SQL: Managed RDBMS MySQL or PostgreSQL PostgreSQL - up to 30 TB Cloud Spanner - better scalability than Cloud SQL You can make a bucket item world-readable and have it available on the web. gsutil acl ch -u allUsers:R gs://$DEVSHELL_PROJECT_ID/my-excellent-blog.png Available at https://storage.googleapis.com/qwiklabs-gcp-00-29a6802e787e/my-excellent-blog.png","title":"Storage"},{"location":"Cloud/#k8s","text":"Kubernetes (open source) and Kubernetes Engine (GCP product) Google Container Registry Pod - a set of running containers Anthos (hybrid - managed K8S and GKE on-prem)","title":"K8S"},{"location":"Cloud/#app-engine","text":"App Engine Standard App Engine Flexible Cloud Endpoints Apigee Edge - monetize APIs","title":"App Engine"},{"location":"Cloud/#big-data-and-machine-learning","text":"Dataproc - Hadoop and Spark Dataflow - ETL, orchestration, exactly-once ordered processing of streaming data BigQuery - pretty expensive PubSub - messages live up to 7 days Google Cloud AI Platform Notebooks - sort of replacing Datalab","title":"Big Data and Machine Learning"},{"location":"Cloud/#bigquery","text":"A dataset is a namespace that holds zero or more tables.","title":"BigQuery"},{"location":"Cloud/#gcp-training-on-big-data-and-machine-learning","text":"Organization -> folders -> projects -> resources Billing is done on the project level. Not all services are available on all sites. https://cloud.google.com/about/locations Dataflow ~ Apache Beam Dataprep - cleaning and transforming UI tool Dataproc ~ managed Hadoop or Spark Bigtable ~ HBase Colossus - underlying BigQuery $5 per TB. The first TB is free every month. cloud.google.com/customers BigQuery is a petabyte storage while Storage is an exobyte storage. RankBrain (ML for search ranking) Petabyte cross-site bisectional network bandwidth - enable separation between compute and storage Preemptible VMs - 80% cheaper than permanent VMs ALS with PySpark Is our data big enough to use BigQuery?","title":"GCP Training on Big Data and Machine Learning"},{"location":"Cloud/#dataproc","text":"PySpark Matrix factorization - used in recommendation system. ALS (alternating least squares) - used for matrix fatorization","title":"Dataproc"},{"location":"Cloud/#bigquery_1","text":"Petabyte storage Petabyte bisectional bandwidth between storage and query services. Dataset - holder for tables Federated query? Supports streaming. No UI support, however. A few seconds latency. For streaming, use BigQuery directly for ELT or Dataflow for ETL? STRUCT and ARRAY GIS capability (ST_GeogPoint(longitude, latitude))","title":"BigQuery"},{"location":"Cloud/#storage-service","text":"Column-oriented? Uses Colossus as storage Supports both bulk and streaming ingest","title":"Storage Service"},{"location":"Cloud/#query-service","text":"Web UI CLI: bq Rest API","title":"Query Service"},{"location":"Cloud/#ml","text":"features label (continuous or discrete) - what you want to predict (i.e., output) model = function from features to label example = observation ROC AUC playground.tensorflow.org Containers on cargo to predict economic numbers.","title":"ML"},{"location":"Cloud/#bqml","text":"Write machine learning models with SQL","title":"BQML"},{"location":"Cloud/#pubsub","text":"topic / subscription / subscriber Each subscription receives every message on the topic. Not all subscribers receive every message from subscription. At-least-once delivery push and pull - between subscription and subscribers","title":"Pub/Sub"},{"location":"Cloud/#dataflow","text":"Apache Beam. DAG executor. github.com/Google.../...templates Java, Python, and Go. p = Pipeline.create() p.apply(...) p.apply(...) ... p.run()","title":"Dataflow"},{"location":"Cloud/#data-studio","text":"Dashboard","title":"Data Studio"},{"location":"Docker/","text":"Docker Concepts An image consists of layers. Each layer contains a set of files. A special file system, aufs (advanced multi-layered unification filesystem), handles this layered structure. A container is a running instance of an image. Dockerfile Based on cheat sheet . ENTRYPOINT and CMD They can be specified in exec form or shell form. Prefer the exec form. CMD [\"foo\", \"bar\"] CMD foo bar When exec form is used, how to use variable substitution? docker run runs ENTRYPOINT + CMD . Either can be omitted. They can be overwritten by docker run [--entrypoint ENTRYPOINT] IMAGE [CMD] FROM Using multiple FROM s. Why? FROM x AS y ... FROM z COPY --from=y ... ADD and COPY They are similar, but the source of ADD can be a remote URL or a tar file. If it's a tar file, it's untarred onto the destination. VOLUME It creates a mount point. You can't copy to it in Dockerfile . ENV and ARG If the same name is used, ENV precedes ARG . The argument can be passed using --build-arg NAME=VALUE in docker build . Do not use secrets in ARG . It remains in the image. EXPOSE It is most for the documentation purpose. However, if -P is used in docker run , all exposed ports are mapped to ephemeral ports in the host. The mapped ports can be checked in docker inspect . Containers Memory Limit The output of free or top inside a container shows the incorrect total memory available to the container. Run docker container stats on the host instead. To get the memory limit within a container, read /sys/fs/cgroup/memory/memory.limit_in_bytes . Pid 1 Docker Tips How do I list all available Docker images in GCP? The images are registered in gcr.io . It appears that an image belongs to a project. On console.cloud.google.com , check Container Registry. In CLI, run the following. gcloud container images list --filter=<word> gcloud container images list-tags gcr.io/<full-path> CLI Summary run <image> -d detach - running in background -it interactive terminal -p <host:container> port -v <host:container> volume (disk) -e <name=value> environment variable exec [-it] <container> <command> <command> is often /bin/bash attach <container> ps -a show all, not just running stop <container> rm <container> inspect <name> logs <name> build Dockerfile images pull <image> push <image>[:<tag>] rmi <image> history <image> Components Network Pre-existing networks: bridge, host, none docker network create|ls|... docker run --network <network> Storage: /var/lib/docker Registry Docker Compose: A separate product to run multiple containers (on a single host) Docker Swarm: Docker's attempt to compete with Kubernetes","title":"Docker"},{"location":"Docker/#docker","text":"","title":"Docker"},{"location":"Docker/#concepts","text":"An image consists of layers. Each layer contains a set of files. A special file system, aufs (advanced multi-layered unification filesystem), handles this layered structure. A container is a running instance of an image.","title":"Concepts"},{"location":"Docker/#dockerfile","text":"Based on cheat sheet .","title":"Dockerfile"},{"location":"Docker/#entrypoint-and-cmd","text":"They can be specified in exec form or shell form. Prefer the exec form. CMD [\"foo\", \"bar\"] CMD foo bar When exec form is used, how to use variable substitution? docker run runs ENTRYPOINT + CMD . Either can be omitted. They can be overwritten by docker run [--entrypoint ENTRYPOINT] IMAGE [CMD]","title":"ENTRYPOINT and CMD"},{"location":"Docker/#from","text":"Using multiple FROM s. Why? FROM x AS y ... FROM z COPY --from=y ...","title":"FROM"},{"location":"Docker/#add-and-copy","text":"They are similar, but the source of ADD can be a remote URL or a tar file. If it's a tar file, it's untarred onto the destination.","title":"ADD and COPY"},{"location":"Docker/#volume","text":"It creates a mount point. You can't copy to it in Dockerfile .","title":"VOLUME"},{"location":"Docker/#env-and-arg","text":"If the same name is used, ENV precedes ARG . The argument can be passed using --build-arg NAME=VALUE in docker build . Do not use secrets in ARG . It remains in the image.","title":"ENV and ARG"},{"location":"Docker/#expose","text":"It is most for the documentation purpose. However, if -P is used in docker run , all exposed ports are mapped to ephemeral ports in the host. The mapped ports can be checked in docker inspect .","title":"EXPOSE"},{"location":"Docker/#containers","text":"","title":"Containers"},{"location":"Docker/#memory-limit","text":"The output of free or top inside a container shows the incorrect total memory available to the container. Run docker container stats on the host instead. To get the memory limit within a container, read /sys/fs/cgroup/memory/memory.limit_in_bytes .","title":"Memory Limit"},{"location":"Docker/#pid-1","text":"","title":"Pid 1"},{"location":"Docker/#docker-tips","text":"","title":"Docker Tips"},{"location":"Docker/#how-do-i-list-all-available-docker-images-in-gcp","text":"The images are registered in gcr.io . It appears that an image belongs to a project. On console.cloud.google.com , check Container Registry. In CLI, run the following. gcloud container images list --filter=<word> gcloud container images list-tags gcr.io/<full-path>","title":"How do I list all available Docker images in GCP?"},{"location":"Docker/#cli-summary","text":"run <image> -d detach - running in background -it interactive terminal -p <host:container> port -v <host:container> volume (disk) -e <name=value> environment variable exec [-it] <container> <command> <command> is often /bin/bash attach <container> ps -a show all, not just running stop <container> rm <container> inspect <name> logs <name> build Dockerfile images pull <image> push <image>[:<tag>] rmi <image> history <image>","title":"CLI Summary"},{"location":"Docker/#components","text":"Network Pre-existing networks: bridge, host, none docker network create|ls|... docker run --network <network> Storage: /var/lib/docker Registry Docker Compose: A separate product to run multiple containers (on a single host) Docker Swarm: Docker's attempt to compete with Kubernetes","title":"Components"},{"location":"Git/","text":"Concepts Index In Git, index , cache , and stage are synonymous. Why is index named so, though? The index is stored as a binary file .git/index . Use git ls-files --stage to view the file. The index has enough to construct a tree object. In addition, each file in index has a slot number (0-3) to deal with merge (normal, base, mine, other). Tasks Merge or Rebase Conflicts You can encounter conflicts in rebase or merge. After resolving the conflicts, you run git add . In rebase, you run git rebase --continue . In merge, you run git commit . Tips A..B vs A...B In general, if A is an ancestor of B , both versions are the same. https://wincent.com/wiki/Git_%22range%22_or_%22dot%22_syntax https://git-scm.com/docs/git-rev-parse#_specifying_ranges git log A..B Equivalent to git log ^A B . So, it means to list all ancestors of B (including itself), excluding all ancestors of A . Note that A is not included in the output. git log A...B Equivalent to git log A B --not $(git merge-base --all A B) . So, it means to list all ancestors of A and B , excluding common ancestors. Not sure when it is useful. git diff A..B Simply equivalent to git diff A B . git diff A...B Equivalent to git diff $(git merge-base A B) B . Typically, A and B refer to branches. For example, git diff master..feature shows changes you've made to feature since it was branched out of master . List the first and last commits for each directory. for d ( *(/) ) { echo \"\\n$d\"; git graph $d | sed -e 1b -e '$!d' } | less","title":"Git"},{"location":"Git/#concepts","text":"","title":"Concepts"},{"location":"Git/#index","text":"In Git, index , cache , and stage are synonymous. Why is index named so, though? The index is stored as a binary file .git/index . Use git ls-files --stage to view the file. The index has enough to construct a tree object. In addition, each file in index has a slot number (0-3) to deal with merge (normal, base, mine, other).","title":"Index"},{"location":"Git/#tasks","text":"","title":"Tasks"},{"location":"Git/#merge-or-rebase-conflicts","text":"You can encounter conflicts in rebase or merge. After resolving the conflicts, you run git add . In rebase, you run git rebase --continue . In merge, you run git commit .","title":"Merge or Rebase Conflicts"},{"location":"Git/#tips","text":"","title":"Tips"},{"location":"Git/#ab-vs-ab","text":"In general, if A is an ancestor of B , both versions are the same. https://wincent.com/wiki/Git_%22range%22_or_%22dot%22_syntax https://git-scm.com/docs/git-rev-parse#_specifying_ranges","title":"A..B vs A...B"},{"location":"Git/#git-log-ab","text":"Equivalent to git log ^A B . So, it means to list all ancestors of B (including itself), excluding all ancestors of A . Note that A is not included in the output.","title":"git log A..B"},{"location":"Git/#git-log-ab_1","text":"Equivalent to git log A B --not $(git merge-base --all A B) . So, it means to list all ancestors of A and B , excluding common ancestors. Not sure when it is useful.","title":"git log A...B"},{"location":"Git/#git-diff-ab","text":"Simply equivalent to git diff A B .","title":"git diff A..B"},{"location":"Git/#git-diff-ab_1","text":"Equivalent to git diff $(git merge-base A B) B . Typically, A and B refer to branches. For example, git diff master..feature shows changes you've made to feature since it was branched out of master .","title":"git diff A...B"},{"location":"Git/#list-the-first-and-last-commits-for-each-directory","text":"for d ( *(/) ) { echo \"\\n$d\"; git graph $d | sed -e 1b -e '$!d' } | less","title":"List the first and last commits for each directory."},{"location":"Learning/","text":"Learn How to Learn Barbara Oakley (Coursera) Focused mode vs diffuse mode Diffuse mode is important, letting you think more freely. Getting to diffuse mode Washing dishes Taking a shower Taking a nap Riding on a bus Spaced repetition Two important things in learning Sleep allows synapses to shrink so it's ready for new learning Exercise increases the hippocampus (part of brain that has to do with learning) Creativity - openness and disconforming When you write, you are in focused mode (editor) or diffuse mode (writer). Don't mix. Imposter syndrome. \"I don't belong here.\" Common feeling. Fake it until make it. Chunking Working memory - limited \"slots\" in preforntal cortex. How to use this resource better? Chunking (abstracting). Putting pieces together Focused attention Understanding Practice Active recall (instead of passive re-reading) Hormones Acetylcholine Dopamine Seratonin Transfer (connecting concepts) Einstellung (bogged down by preconception) Avoid illusions of competence in learning Test yourself Active recall Practice deliberately (with strategy, plan, and feedback) Explain to 10-year-olds Interleaving Law of serendipity - luck favors the one who tries. Don't just follow your passions. Broaden your passion. Procrastination Countermeasures Just start. Once you start, the \"pain\" goes away quickly. The pomodoro technique can help. Focus on process, not product Task list. Write down in the evening for the next day. Will power is limited. Don't waste it. Apply it when reacting to a procrastination cue. Form good habits and break bad habits Cue (location, time, situation, etc.) Routine. Plan helps. Reward Belief Memory Visualize Memory palace technique Use metaphors and analogies Astrocytes Hippocampus Prefrontal cortex Cortisol","title":"Learn How to Learn"},{"location":"Learning/#learn-how-to-learn","text":"Barbara Oakley (Coursera) Focused mode vs diffuse mode Diffuse mode is important, letting you think more freely. Getting to diffuse mode Washing dishes Taking a shower Taking a nap Riding on a bus Spaced repetition Two important things in learning Sleep allows synapses to shrink so it's ready for new learning Exercise increases the hippocampus (part of brain that has to do with learning) Creativity - openness and disconforming When you write, you are in focused mode (editor) or diffuse mode (writer). Don't mix. Imposter syndrome. \"I don't belong here.\" Common feeling. Fake it until make it.","title":"Learn How to Learn"},{"location":"Learning/#chunking","text":"Working memory - limited \"slots\" in preforntal cortex. How to use this resource better? Chunking (abstracting). Putting pieces together Focused attention Understanding Practice Active recall (instead of passive re-reading) Hormones Acetylcholine Dopamine Seratonin Transfer (connecting concepts) Einstellung (bogged down by preconception) Avoid illusions of competence in learning Test yourself Active recall Practice deliberately (with strategy, plan, and feedback) Explain to 10-year-olds Interleaving Law of serendipity - luck favors the one who tries. Don't just follow your passions. Broaden your passion.","title":"Chunking"},{"location":"Learning/#procrastination","text":"Countermeasures Just start. Once you start, the \"pain\" goes away quickly. The pomodoro technique can help. Focus on process, not product Task list. Write down in the evening for the next day. Will power is limited. Don't waste it. Apply it when reacting to a procrastination cue. Form good habits and break bad habits Cue (location, time, situation, etc.) Routine. Plan helps. Reward Belief","title":"Procrastination"},{"location":"Learning/#memory","text":"Visualize Memory palace technique Use metaphors and analogies Astrocytes Hippocampus Prefrontal cortex Cortisol","title":"Memory"},{"location":"Memo/","text":"Spaced Repitition What Else to Review Anki Hacker News. Check Chrome bookmarks. YouTube. Check YouTube playlists. The Week / The Economist / NYT / WSJ Books We Have No Idea Reality is Not What It Seems Today I Learned C4 model - 4 levels (context, containers, components, and code) of diagrams networkx - a graph library in Python Flourish for graph visualization Pandas mask vs where . Multiple regression (many predictor terms) vs multivariate regression (the response is a vector). Sometimes, multivariate regression is used to mean multiple regression. Data imputation - replacing missing values In Modelstate, \"wide\" - production schema and \"narrow\" - processed. Not what wide and narrow typically mean in data science. 4 Vs of big data Volume Velocity Variety Veracity xgBoost - gradient boosting library (eXtreme Gradient Boosting) Google Cloud Deployment Manager - different than K8S, higher level? MIC (Market Identifier Code) - ISO 10383 Most GitLab CI scripts run inside the container as-gitlab-runner , which is made in as-admin/deployments/gitlab/as-gitlab-runner/build-and-push.sh . Technical Python Print stack traces on warnings. If warnings are treated as errors, stack traces are printed; that is, import warnings; warnings.filterwarnings('error') PyCharm A-F7 is modal. When in the find bar, it searches all occurrences only in the current file. Outside the find bar, it searches in the default scope (e.g., a project). Java Java 9 Jigsaw (module support) JShell Private methods in interfaces Optional Immutable Set.of() and Map.of() . Java 10 var Unmodifiable collections: List.copyOf() , Set.copyOf() , Map.copyOf() . Better parallel full GC for G1 UNIX apt is sort of a combination of apt-get and apt-cache . SSH eval `ssh-agent` ssh-add ssh-add -l ssh-agent -k Finance and Quantitative k-fold cross validation L1 regularization (Lasso) - panelty on absolute value of beta. Tend to get rid of weak terms. L2 regularization (Ridge) - penalty on square of beta L1/L2 regularization (Elastic Net) EDGAR Composite 10K/10Q Mean, standard deviation, skewness (third standardized moment), and kurtosis (fourth standardized moment; size of two tails) What is haircut? What is cUtil (conservative utility)? Why conservative? Spearman's rank correlation is more robust to the possibly abnormal distribution. Lagging returns vs leading returns . Lagging returns are computed using \"price\" whereas leading returns are computed using \"nextPrice\". The \"price\" at time t is the price last observed as of the time. The \"nextPrice\" at time t is the first price observed after the time. Using lagging returns makes sense for forecast modeling, as you are not allowed to look ahead. Using leading returns makes sense for evaluating models, as the leading returns are more indicative how forecasts are realized. Information Coefficient (IC) IC ranges [-1, 1] like correlation. IC = 2 * proportion_correct - 1 Reproducibility and Look-Ahead Errors For reproducibility, generate features for the same period twice and see if they are the same. Try pinning random seeds (e.g., np.random.seed ). For look-ahead errors, generate features for [0, d] and [0, d+1] . Be sure for [d, d+1] be in the test set (as opposed to training set). The features for Day d must be the same in the two cases. Security Identifiers Barra ID - MSCI CUSIP number (Committee on Uniform Securities Identification Procedures) - SEC FIGI (Financial Instrument Global Identifier) - Bloomberg ISIN (International Securities Identification Number) SEDOL (Stock Exchange Daily Official List) - London Stock Exchange Ticker Non-Technical Mental-Fitness Exercises https://www.wsj.com/articles/a-workout-for-your-mental-health-11610917200a Make sleep non-negotiable Set a consistent wake-up time. Create a relaxing wind-down routine, starting an hour before bedtime. Set a routine Create a morning ritual. Calm your mind Begin the day with 15-20 minutes of Yoga, meditation, or prayer Schedule four \"mini interventions\" of two-minute breathing exercise or \"making a tight fist with one hand, imagine it holding all the tention in my body for 10 seconds\"). Watch your language Use \"cooler\" language, not \"hot\". Use \"would like to\" instead of \"should\". Practice compassion Don't be mean to yourself. Treat yourself with kindness and understanding. Move your body Aerobic exercise reduces fatigue and tention. Create a media diet \"News calorie count\" Purge negative people from your social media feed. Choose extracurricular activities wisely Ones that give you a sense of purpose (e.g., volunteering) or that make you feel accomplished or masterful (e.g., learning a language) Cultivate supportive relationships Connect regularly with friends and family. Be open about how I am. Vulnerability can be bonding. 8 Management Best Practices Good managers do the following. How would you prioritize? Achieves results Coaches Communicates Develops careers Empowers Includes others Inspires Promotes trust Procrastination It is not a time management issue but an emotion management issue. Allow imperfect work (self-compassion). Identify and focus on the next action. Be mindful. Being mindful is being aware of the state of your mind. Don't try to avoid or don't over-think. \"Smart\" Goals A goal must be SMART . Specific Measurable Achievable Relevant - the goal must be relevant to the big picture. Time-bound Books Practical Object-Oriented Design in Ruby The arrangement of code is the design. A software design must be SOLID . Single responsibility Open-closed - open to extension (think inheritance) and closed for modification Liskov substitution - is-a relationship Interface separation Dependency inversion Apache Soup Arrow - platform for in-memory data Parquet - column-oriented storage format Avro - row-oriented RPC and serialization framework (associated with Hadoop project). Competing with gRPC/Protobuf and Thrift","title":"Spaced Repitition"},{"location":"Memo/#spaced-repitition","text":"","title":"Spaced Repitition"},{"location":"Memo/#what-else-to-review","text":"Anki Hacker News. Check Chrome bookmarks. YouTube. Check YouTube playlists. The Week / The Economist / NYT / WSJ Books We Have No Idea Reality is Not What It Seems","title":"What Else to Review"},{"location":"Memo/#today-i-learned","text":"C4 model - 4 levels (context, containers, components, and code) of diagrams networkx - a graph library in Python Flourish for graph visualization Pandas mask vs where . Multiple regression (many predictor terms) vs multivariate regression (the response is a vector). Sometimes, multivariate regression is used to mean multiple regression. Data imputation - replacing missing values In Modelstate, \"wide\" - production schema and \"narrow\" - processed. Not what wide and narrow typically mean in data science. 4 Vs of big data Volume Velocity Variety Veracity xgBoost - gradient boosting library (eXtreme Gradient Boosting) Google Cloud Deployment Manager - different than K8S, higher level? MIC (Market Identifier Code) - ISO 10383 Most GitLab CI scripts run inside the container as-gitlab-runner , which is made in as-admin/deployments/gitlab/as-gitlab-runner/build-and-push.sh .","title":"Today I Learned"},{"location":"Memo/#technical","text":"","title":"Technical"},{"location":"Memo/#python","text":"Print stack traces on warnings. If warnings are treated as errors, stack traces are printed; that is, import warnings; warnings.filterwarnings('error')","title":"Python"},{"location":"Memo/#pycharm","text":"A-F7 is modal. When in the find bar, it searches all occurrences only in the current file. Outside the find bar, it searches in the default scope (e.g., a project).","title":"PyCharm"},{"location":"Memo/#java","text":"","title":"Java"},{"location":"Memo/#java-9","text":"Jigsaw (module support) JShell Private methods in interfaces Optional Immutable Set.of() and Map.of() .","title":"Java 9"},{"location":"Memo/#java-10","text":"var Unmodifiable collections: List.copyOf() , Set.copyOf() , Map.copyOf() . Better parallel full GC for G1","title":"Java 10"},{"location":"Memo/#unix","text":"apt is sort of a combination of apt-get and apt-cache .","title":"UNIX"},{"location":"Memo/#ssh","text":"eval `ssh-agent` ssh-add ssh-add -l ssh-agent -k","title":"SSH"},{"location":"Memo/#finance-and-quantitative","text":"k-fold cross validation L1 regularization (Lasso) - panelty on absolute value of beta. Tend to get rid of weak terms. L2 regularization (Ridge) - penalty on square of beta L1/L2 regularization (Elastic Net) EDGAR Composite 10K/10Q Mean, standard deviation, skewness (third standardized moment), and kurtosis (fourth standardized moment; size of two tails) What is haircut? What is cUtil (conservative utility)? Why conservative? Spearman's rank correlation is more robust to the possibly abnormal distribution. Lagging returns vs leading returns . Lagging returns are computed using \"price\" whereas leading returns are computed using \"nextPrice\". The \"price\" at time t is the price last observed as of the time. The \"nextPrice\" at time t is the first price observed after the time. Using lagging returns makes sense for forecast modeling, as you are not allowed to look ahead. Using leading returns makes sense for evaluating models, as the leading returns are more indicative how forecasts are realized.","title":"Finance and Quantitative"},{"location":"Memo/#information-coefficient-ic","text":"IC ranges [-1, 1] like correlation. IC = 2 * proportion_correct - 1","title":"Information Coefficient (IC)"},{"location":"Memo/#reproducibility-and-look-ahead-errors","text":"For reproducibility, generate features for the same period twice and see if they are the same. Try pinning random seeds (e.g., np.random.seed ). For look-ahead errors, generate features for [0, d] and [0, d+1] . Be sure for [d, d+1] be in the test set (as opposed to training set). The features for Day d must be the same in the two cases.","title":"Reproducibility and Look-Ahead Errors"},{"location":"Memo/#security-identifiers","text":"Barra ID - MSCI CUSIP number (Committee on Uniform Securities Identification Procedures) - SEC FIGI (Financial Instrument Global Identifier) - Bloomberg ISIN (International Securities Identification Number) SEDOL (Stock Exchange Daily Official List) - London Stock Exchange Ticker","title":"Security Identifiers"},{"location":"Memo/#non-technical","text":"","title":"Non-Technical"},{"location":"Memo/#mental-fitness-exercises","text":"https://www.wsj.com/articles/a-workout-for-your-mental-health-11610917200a Make sleep non-negotiable Set a consistent wake-up time. Create a relaxing wind-down routine, starting an hour before bedtime. Set a routine Create a morning ritual. Calm your mind Begin the day with 15-20 minutes of Yoga, meditation, or prayer Schedule four \"mini interventions\" of two-minute breathing exercise or \"making a tight fist with one hand, imagine it holding all the tention in my body for 10 seconds\"). Watch your language Use \"cooler\" language, not \"hot\". Use \"would like to\" instead of \"should\". Practice compassion Don't be mean to yourself. Treat yourself with kindness and understanding. Move your body Aerobic exercise reduces fatigue and tention. Create a media diet \"News calorie count\" Purge negative people from your social media feed. Choose extracurricular activities wisely Ones that give you a sense of purpose (e.g., volunteering) or that make you feel accomplished or masterful (e.g., learning a language) Cultivate supportive relationships Connect regularly with friends and family. Be open about how I am. Vulnerability can be bonding.","title":"Mental-Fitness Exercises"},{"location":"Memo/#8-management-best-practices","text":"Good managers do the following. How would you prioritize? Achieves results Coaches Communicates Develops careers Empowers Includes others Inspires Promotes trust","title":"8 Management Best Practices"},{"location":"Memo/#procrastination","text":"It is not a time management issue but an emotion management issue. Allow imperfect work (self-compassion). Identify and focus on the next action. Be mindful. Being mindful is being aware of the state of your mind. Don't try to avoid or don't over-think.","title":"Procrastination"},{"location":"Memo/#smart-goals","text":"A goal must be SMART . Specific Measurable Achievable Relevant - the goal must be relevant to the big picture. Time-bound","title":"\"Smart\" Goals"},{"location":"Memo/#books","text":"","title":"Books"},{"location":"Memo/#practical-object-oriented-design-in-ruby","text":"The arrangement of code is the design. A software design must be SOLID . Single responsibility Open-closed - open to extension (think inheritance) and closed for modification Liskov substitution - is-a relationship Interface separation Dependency inversion","title":"Practical Object-Oriented Design in Ruby"},{"location":"Memo/#apache-soup","text":"Arrow - platform for in-memory data Parquet - column-oriented storage format Avro - row-oriented RPC and serialization framework (associated with Hadoop project). Competing with gRPC/Protobuf and Thrift","title":"Apache Soup"},{"location":"MentalModels/","text":"Mental Models References Farnam Street Super Thinking Mental models for designers 50 ideas Brilliant.org . STEM-oriented. General Incentives 80-20 rule Critical mass. Related to momentum, tipping point, activation energy, and catalyst. Reversible vs irreversible decisions First Principles Thinking A first principle is like an axiom in math. Everything derives from there. Reasoning from first principles. Break down a problem into basic elements. Ask 5 whys to get to the bottom of it. Second-Order Thinking Predict consequences of consequences of a decision. Second-Order Thinking: What Smart People Use to Outperform Also called second-level thinking (by Howard Marks). Exploration and Exploitation Should I be sticking to it, pivoting, or moving on? That's the question relevant at any point in life. When things go well, think of exploitation versus exploration. Often times, it is better off keeping the position (exploitation). Every now and then, you can try something new (exploitation) to see if you are missing out anything. When things don't go well, think of tenacity versus flexibility. Should I stick to it until things turn around (tenacity)? Or should I pivot or even quit (flexibility)? While a rolling stone gathers no moss, don't get trapped in sunk cost fallacy. Iterated Prisoner's Dilemma There are four traits to excel. Nice Retaliatory Forgiving Clear Cognitive Biases List in Wikipedia Confirmation bias Survivorship bias Anchoring Placebo effect Logical Fallacies List in Wikipedia Slippery slope False dichotomy Post hoc ergo propter hoc Mathematical Problems Secretary problem Newsvendor model Birthday paradox Rule of 72 Multi-armed bandit problem Software Engineering Many useful concepts and principles in software engineering can be applied to real life. Abstraction Layers Indirection - \"Most problems can be solved by adding a layer of indirection.\" SWOT Analysis This technique is used to analyze products, business, etc. Positive Negative Internal (Present)) Strengths Weaknesses External (Future) Opportunities Threats","title":"Mental Models"},{"location":"MentalModels/#mental-models","text":"","title":"Mental Models"},{"location":"MentalModels/#references","text":"Farnam Street Super Thinking Mental models for designers 50 ideas Brilliant.org . STEM-oriented.","title":"References"},{"location":"MentalModels/#general","text":"Incentives 80-20 rule Critical mass. Related to momentum, tipping point, activation energy, and catalyst. Reversible vs irreversible decisions","title":"General"},{"location":"MentalModels/#first-principles-thinking","text":"A first principle is like an axiom in math. Everything derives from there. Reasoning from first principles. Break down a problem into basic elements. Ask 5 whys to get to the bottom of it.","title":"First Principles Thinking"},{"location":"MentalModels/#second-order-thinking","text":"Predict consequences of consequences of a decision. Second-Order Thinking: What Smart People Use to Outperform Also called second-level thinking (by Howard Marks).","title":"Second-Order Thinking"},{"location":"MentalModels/#exploration-and-exploitation","text":"Should I be sticking to it, pivoting, or moving on? That's the question relevant at any point in life. When things go well, think of exploitation versus exploration. Often times, it is better off keeping the position (exploitation). Every now and then, you can try something new (exploitation) to see if you are missing out anything. When things don't go well, think of tenacity versus flexibility. Should I stick to it until things turn around (tenacity)? Or should I pivot or even quit (flexibility)? While a rolling stone gathers no moss, don't get trapped in sunk cost fallacy.","title":"Exploration and Exploitation"},{"location":"MentalModels/#iterated-prisoners-dilemma","text":"There are four traits to excel. Nice Retaliatory Forgiving Clear","title":"Iterated Prisoner's Dilemma"},{"location":"MentalModels/#cognitive-biases","text":"List in Wikipedia Confirmation bias Survivorship bias Anchoring Placebo effect","title":"Cognitive Biases"},{"location":"MentalModels/#logical-fallacies","text":"List in Wikipedia Slippery slope False dichotomy Post hoc ergo propter hoc","title":"Logical Fallacies"},{"location":"MentalModels/#mathematical-problems","text":"Secretary problem Newsvendor model Birthday paradox Rule of 72 Multi-armed bandit problem","title":"Mathematical Problems"},{"location":"MentalModels/#software-engineering","text":"Many useful concepts and principles in software engineering can be applied to real life. Abstraction Layers Indirection - \"Most problems can be solved by adding a layer of indirection.\"","title":"Software Engineering"},{"location":"MentalModels/#swot-analysis","text":"This technique is used to analyze products, business, etc. Positive Negative Internal (Present)) Strengths Weaknesses External (Future) Opportunities Threats","title":"SWOT Analysis"},{"location":"Python/","text":"Python Virtual Environments A good answer from Stack Overflow and a suggestion (pyenv + pipenv) https://medium.com/@greut/building-a-python-package-a-docker-image-using-pipenv-233d8793b6cc Choices * venv - standard library since 3.3 * Virtualenv * Pipenv. It uses virtualenv. * poetry? * pyenv. Can support multiple python interpreters - competing with conda in this regard. * conda Competitions, roughly. * venv ~ virtualenv * pipenv ~ poetry * pyenv ~ conda. Logging Three main types of objects. See logging flow for how they work together. Loggers Handlers Formatters In many cases, you don't need such flexibility. Setting up with logging.basicConfig() is enough. Generator A generator function is a function that uses yield . Calling such a function returns a generator object . The generator object works like an iterator. You can call next(g) . Each call returns an item. When it reaches the end, it throws a StopIteration exception. The generator reaches the end if it (1) reaches the end of the function, (2) returns (if return returns a value, it's an error), or (3) raises a StopIteration exception. If you call another generator within a generator, use yield from .","title":"Python"},{"location":"Python/#python","text":"","title":"Python"},{"location":"Python/#virtual-environments","text":"A good answer from Stack Overflow and a suggestion (pyenv + pipenv) https://medium.com/@greut/building-a-python-package-a-docker-image-using-pipenv-233d8793b6cc Choices * venv - standard library since 3.3 * Virtualenv * Pipenv. It uses virtualenv. * poetry? * pyenv. Can support multiple python interpreters - competing with conda in this regard. * conda Competitions, roughly. * venv ~ virtualenv * pipenv ~ poetry * pyenv ~ conda.","title":"Virtual Environments"},{"location":"Python/#logging","text":"Three main types of objects. See logging flow for how they work together. Loggers Handlers Formatters In many cases, you don't need such flexibility. Setting up with logging.basicConfig() is enough.","title":"Logging"},{"location":"Python/#generator","text":"A generator function is a function that uses yield . Calling such a function returns a generator object . The generator object works like an iterator. You can call next(g) . Each call returns an item. When it reaches the end, it throws a StopIteration exception. The generator reaches the end if it (1) reaches the end of the function, (2) returns (if return returns a value, it's an error), or (3) raises a StopIteration exception. If you call another generator within a generator, use yield from .","title":"Generator"},{"location":"TIL/","text":"Today I Learned 2022-07-29 Blogging Platforms Features How to host? GitHub Pages with CNAME Netlify GCP Markdown? Analytics Search engine optimization Comments (Commento) and discussions? Candidates Static site generators Docusaurus - made by Meta Material for MkDocs Quarto Pandoc Jekyll (Ruby) - supported by GitHub Pelican (Python) Nikola (Python) Gatsby Hugo (Go) Hexo 11ty Ghost Contentful CMS WordPress Hosted Medium Substack 2022-03-21 Technology Radar v25 Service mesh - Istio and Linkerd Kats - Meta's time series library 2022-01-26 Photo Management 3 copies - 2 places - 1 offline Google Photos Printing - Blurb SmugMug? 2021-10-30 Coffee 212 F = 100 C In espresso, coffee : water = 1 : 2-3. The darker the roasting, the tighter can the ratio be. In drip, coffee : water = 1 : 15-20 Dark roast - can use lower temperature Drip control variables Grind Water temperature Coffee-water ratio Drip time (constant) - roughly two minutes 2021-10-29 Swastika - Nazi symbol Pangram - a sentence that contains all 26 letters (\"The quick brown fox jumps over the lazy dog.\") 2021-10-28 Forming - storming - norming - performing -> Stages of group development. 2021-10-12 Potemkin village - an impressive facade or show designed to hide an undesirable fact or condition. The name derived from a historical event that happened circa 1900. 2021-10-04 Learn how to tie a bowline knot. 2021-10-03 \"You might as well timestamp it\" 2021-07-29 In US Large cap: Larger than $10b Mid cap: $2-10b Small cap: Smaller than $2b 2021-07-15 Carlo Rovelli - Seven Brief Lessons on Physics 2021-05-27 Cloudability Insights > Containers: Not showing any data. It's supposed to show Kubernetes uses? \"Insights\" tabs don't seem to provide much insight? 2021-05-16 Terraform High-level structure: terraform {} provider NAME {} resource TYPE NAME {} terraform.tfstate - don't check in. Not required, but it's good to have three files: main.tf , variables.tf , and outputs.tf . depends_on provisioner variable , variables.tf , and values.tfvars (used by -var-file ) Terraform commands init apply show refresh output 2021-05-08 FT terms ADDR - average daily dollar risk VAF - volume adjustment factor Stuff TS 300 Modeling product portal SignalKit 2021-04-25 Procrastination This Tim Urban's TED talk introduces the instant gratification monkey to explain the procrastination and the panic monster to explain how to cope with it. He presents a big lesson towards the end. He classifies procrastination situations into those with deadlines and those without. Those without deadlines tend to be important in the long run. Yet, since there is no deadline, no panic monster kicks in; therefore, we end up delaying indefinitely, which can cause big long-term consequences. 2021-04-24 System Design An interesting article that says you should always store timestamps instead of boolean values (e.g., published_at instead of is_published ). Google Search Wildcards: You can use * in quotes (e.g., \"best * on mothers day\" ). Range: You can use .. (e.g., ecmascript 2016..2018 ) Dates: You can use before and after to narrow the searches (e.g., best speakers after:2020 ) 2021-04-02 Python Since 3.8, you can use f-strings as follows: f'{a=}' . On the left side, any expression will do (e.g., f'{(a + 1) = }' ). Since 3.7, you can use breakpoint() instead of pdb.set_trace() . As for debugging, try IPython.embed() . It provides a nicer shell, though it doesn't provide the stepping function. Docker Pause (SIGSTOP), stop (SIGTERM and then, if necessary, SIGKILL), kill (SIGKILL) Commit - create a new image from a container. 2021-03-25 Docker Use docker run --memory 10MB ... to limit the memory of a container. Beware - inside the container, free or top shows the host memory, not the container memory limit. To find the container memory inside, run this: root@df2aa7bcf39c:/# cat /sys/fs/cgroup/memory/memory.limit_in_bytes 1073741824 References: https://ops.tips/blog/why-top-inside-container-wrong-memory/ https://faun.pub/understanding-docker-container-memory-limit-behavior-41add155236c 2021-03-10 The jsonclass package is home-grown, based on jsonschema . It is used for ResearchSubmission , which is the class for as_research.json . The schema is difficult to read. It should be replaced by Pydandic or Marshmallow. Mock Service Worker as-web-java uses Java 11 (as defined in Dockerfile). The Gradle version used in as-web-java ( gradle/wrapper/gradle-wrapper.jar ) is too old to work with Java 14. The default Java version on my MacBook is 14, so I had to define JAVA_HOME=/Library/Java/JavaVirtualMachines/openjdk-11.0.2.jdk/Contents/Home . 2021-03-09 SQL: Single quotes for strings. Double quotes are used for database objects like column names. 2021-03-08 Antifragile By Nassim Taleb, as summarized by Productivity Game Cap your downside. Rehearse loss to see more upside. Seek eustress. Weight training, fasting, interval training, etc. Overcompensate. When you make a mistake, make an extra effort to make it up and more.","title":"Today I Learned"},{"location":"TIL/#today-i-learned","text":"","title":"Today I Learned"},{"location":"TIL/#2022-07-29","text":"","title":"2022-07-29"},{"location":"TIL/#blogging-platforms","text":"","title":"Blogging Platforms"},{"location":"TIL/#features","text":"How to host? GitHub Pages with CNAME Netlify GCP Markdown? Analytics Search engine optimization Comments (Commento) and discussions?","title":"Features"},{"location":"TIL/#candidates","text":"Static site generators Docusaurus - made by Meta Material for MkDocs Quarto Pandoc Jekyll (Ruby) - supported by GitHub Pelican (Python) Nikola (Python) Gatsby Hugo (Go) Hexo 11ty Ghost Contentful CMS WordPress Hosted Medium Substack","title":"Candidates"},{"location":"TIL/#2022-03-21","text":"","title":"2022-03-21"},{"location":"TIL/#technology-radar-v25","text":"Service mesh - Istio and Linkerd Kats - Meta's time series library","title":"Technology Radar v25"},{"location":"TIL/#2022-01-26","text":"","title":"2022-01-26"},{"location":"TIL/#photo-management","text":"3 copies - 2 places - 1 offline Google Photos Printing - Blurb SmugMug?","title":"Photo Management"},{"location":"TIL/#2021-10-30","text":"","title":"2021-10-30"},{"location":"TIL/#coffee","text":"212 F = 100 C In espresso, coffee : water = 1 : 2-3. The darker the roasting, the tighter can the ratio be. In drip, coffee : water = 1 : 15-20 Dark roast - can use lower temperature Drip control variables Grind Water temperature Coffee-water ratio Drip time (constant) - roughly two minutes","title":"Coffee"},{"location":"TIL/#2021-10-29","text":"Swastika - Nazi symbol Pangram - a sentence that contains all 26 letters (\"The quick brown fox jumps over the lazy dog.\")","title":"2021-10-29"},{"location":"TIL/#2021-10-28","text":"Forming - storming - norming - performing -> Stages of group development.","title":"2021-10-28"},{"location":"TIL/#2021-10-12","text":"Potemkin village - an impressive facade or show designed to hide an undesirable fact or condition. The name derived from a historical event that happened circa 1900.","title":"2021-10-12"},{"location":"TIL/#2021-10-04","text":"Learn how to tie a bowline knot.","title":"2021-10-04"},{"location":"TIL/#2021-10-03","text":"\"You might as well timestamp it\"","title":"2021-10-03"},{"location":"TIL/#2021-07-29","text":"In US Large cap: Larger than $10b Mid cap: $2-10b Small cap: Smaller than $2b","title":"2021-07-29"},{"location":"TIL/#2021-07-15","text":"Carlo Rovelli - Seven Brief Lessons on Physics","title":"2021-07-15"},{"location":"TIL/#2021-05-27","text":"Cloudability Insights > Containers: Not showing any data. It's supposed to show Kubernetes uses? \"Insights\" tabs don't seem to provide much insight?","title":"2021-05-27"},{"location":"TIL/#2021-05-16","text":"Terraform High-level structure: terraform {} provider NAME {} resource TYPE NAME {} terraform.tfstate - don't check in. Not required, but it's good to have three files: main.tf , variables.tf , and outputs.tf . depends_on provisioner variable , variables.tf , and values.tfvars (used by -var-file ) Terraform commands init apply show refresh output","title":"2021-05-16"},{"location":"TIL/#2021-05-08","text":"FT terms ADDR - average daily dollar risk VAF - volume adjustment factor Stuff TS 300 Modeling product portal SignalKit","title":"2021-05-08"},{"location":"TIL/#2021-04-25","text":"Procrastination This Tim Urban's TED talk introduces the instant gratification monkey to explain the procrastination and the panic monster to explain how to cope with it. He presents a big lesson towards the end. He classifies procrastination situations into those with deadlines and those without. Those without deadlines tend to be important in the long run. Yet, since there is no deadline, no panic monster kicks in; therefore, we end up delaying indefinitely, which can cause big long-term consequences.","title":"2021-04-25"},{"location":"TIL/#2021-04-24","text":"System Design An interesting article that says you should always store timestamps instead of boolean values (e.g., published_at instead of is_published ). Google Search Wildcards: You can use * in quotes (e.g., \"best * on mothers day\" ). Range: You can use .. (e.g., ecmascript 2016..2018 ) Dates: You can use before and after to narrow the searches (e.g., best speakers after:2020 )","title":"2021-04-24"},{"location":"TIL/#2021-04-02","text":"Python Since 3.8, you can use f-strings as follows: f'{a=}' . On the left side, any expression will do (e.g., f'{(a + 1) = }' ). Since 3.7, you can use breakpoint() instead of pdb.set_trace() . As for debugging, try IPython.embed() . It provides a nicer shell, though it doesn't provide the stepping function. Docker Pause (SIGSTOP), stop (SIGTERM and then, if necessary, SIGKILL), kill (SIGKILL) Commit - create a new image from a container.","title":"2021-04-02"},{"location":"TIL/#2021-03-25","text":"Docker Use docker run --memory 10MB ... to limit the memory of a container. Beware - inside the container, free or top shows the host memory, not the container memory limit. To find the container memory inside, run this: root@df2aa7bcf39c:/# cat /sys/fs/cgroup/memory/memory.limit_in_bytes 1073741824 References: https://ops.tips/blog/why-top-inside-container-wrong-memory/ https://faun.pub/understanding-docker-container-memory-limit-behavior-41add155236c","title":"2021-03-25"},{"location":"TIL/#2021-03-10","text":"The jsonclass package is home-grown, based on jsonschema . It is used for ResearchSubmission , which is the class for as_research.json . The schema is difficult to read. It should be replaced by Pydandic or Marshmallow. Mock Service Worker as-web-java uses Java 11 (as defined in Dockerfile). The Gradle version used in as-web-java ( gradle/wrapper/gradle-wrapper.jar ) is too old to work with Java 14. The default Java version on my MacBook is 14, so I had to define JAVA_HOME=/Library/Java/JavaVirtualMachines/openjdk-11.0.2.jdk/Contents/Home .","title":"2021-03-10"},{"location":"TIL/#2021-03-09","text":"SQL: Single quotes for strings. Double quotes are used for database objects like column names.","title":"2021-03-09"},{"location":"TIL/#2021-03-08","text":"","title":"2021-03-08"},{"location":"TIL/#antifragile","text":"By Nassim Taleb, as summarized by Productivity Game Cap your downside. Rehearse loss to see more upside. Seek eustress. Weight training, fasting, interval training, etc. Overcompensate. When you make a mistake, make an extra effort to make it up and more.","title":"Antifragile"},{"location":"TechnologyRadar/","text":"Technology Radar Programming Languages TypeScript Erlang (or Elixir) Cloud Google Cloud Platform ( courses and YouTube channel ) Data Science Machine Learning Books [ACTIVE] The Hundred-Page Machine Learning Book Hands-On Machine Learning with Scikit-Learn and TensorFlow Designing data-intensive applications Courses Peter Norvig's Design of Computer Programs","title":"Technology Radar"},{"location":"TechnologyRadar/#technology-radar","text":"","title":"Technology Radar"},{"location":"TechnologyRadar/#programming-languages","text":"TypeScript Erlang (or Elixir)","title":"Programming Languages"},{"location":"TechnologyRadar/#cloud","text":"Google Cloud Platform ( courses and YouTube channel )","title":"Cloud"},{"location":"TechnologyRadar/#data-science","text":"","title":"Data Science"},{"location":"TechnologyRadar/#machine-learning","text":"Books [ACTIVE] The Hundred-Page Machine Learning Book Hands-On Machine Learning with Scikit-Learn and TensorFlow Designing data-intensive applications Courses Peter Norvig's Design of Computer Programs","title":"Machine Learning"},{"location":"VIM/","text":"VIM Navication Moving the cursor w W e E b B Word backward ( Sentence backward ) Sentence forward { Paragraph backward } Paragraph forward f<c> Move to the next <c> t<c> Move before <c> ; Repeat f or t forward , Repeat f or t backward * Next word # Previous word % Matching bracket/brace/parenthesis Move the cursor to the ... H Top M Middle L Bottom Scroll the current line to the ... zt Top zz Middle zb Bottom Marks Lower-case letters are per-file marks while upper-case letters are global marks. :marks List all marks ma Set a mark a 'a Jump to the line `a Jump to the position `^ Last position of cursor in insert mode `. Last edit position `` Last position before jump `0 Position in the last edited file `[ Beginning of last yanked text `] `< Beginning of last visual selection `> Tabs, Windows, and Buffers :ls Show buffers Editing u Undo C-r Redo . Repeat J Join lines gqq Fill paragraph (gq in visual mode) Deleting things. They are stored in an unnamed register \"\" . You can list registers by running :reg(isters) . dw dW dd d^ d$ D Same as d$ d/foo Delete until \"foo\" Registers A pair of lower-case and upper-case letters refers to the same store. When upper-case is used, the content is appended. :registers List \"[a-zA-Z][dy][ai]<motion> Cut or copy \"[a-z]p Paste \"\" Unnamed register (result of dDxXsScCyY) \"0 Most recently yanked \"1 Most recently deleted Macros Macros are stored in register. q<reg> Start a macro. Press \"q\" to end. @<reg> Execute the registered macro @@ Repeat last macro Visual Mode Entering the visual mode v Character-wise V Line-wise C-v Block-wise Selecting. a (around) or i (inside) followed by a motion key. Some examples: vi\" Select what's inside \"...\". It works for parentheses, brackets, and braces. vas Select thr current sentence Text objects. Used after vi , va , or d . p Paragraph s Sentence w Word W Word (space-separated) t HTML tag [({<'\"`>})] Range operations o Move the cursor to the other side d Cut c Cut and enter the insert mode y Copy (yank) P Paste before p Paste after < Indent left > Indent right u Lower-case U Upper-case : /regex/d Delete matched lines Commands Replace :[range]s/PAT/STR/gc Replace all with each confirmed Delete, move, and copy lines :[range]g/PATTERN/d Delete lines :v/PATTERN/d Delete lines not containing PATTERN :g/PATTERN/t$ Copy lines to EOF :g/PATTERN/m$ Move :g/^/t. Duplicate every line :g/^/m0 Reverse a file Configuration Use ~/.vimrc or ~/.vim/vimrc . Status line TBW","title":"VIM"},{"location":"VIM/#vim","text":"","title":"VIM"},{"location":"VIM/#navication","text":"Moving the cursor w W e E b B Word backward ( Sentence backward ) Sentence forward { Paragraph backward } Paragraph forward f<c> Move to the next <c> t<c> Move before <c> ; Repeat f or t forward , Repeat f or t backward * Next word # Previous word % Matching bracket/brace/parenthesis Move the cursor to the ... H Top M Middle L Bottom Scroll the current line to the ... zt Top zz Middle zb Bottom","title":"Navication"},{"location":"VIM/#marks","text":"Lower-case letters are per-file marks while upper-case letters are global marks. :marks List all marks ma Set a mark a 'a Jump to the line `a Jump to the position `^ Last position of cursor in insert mode `. Last edit position `` Last position before jump `0 Position in the last edited file `[ Beginning of last yanked text `] `< Beginning of last visual selection `>","title":"Marks"},{"location":"VIM/#tabs-windows-and-buffers","text":":ls Show buffers","title":"Tabs, Windows, and Buffers"},{"location":"VIM/#editing","text":"u Undo C-r Redo . Repeat J Join lines gqq Fill paragraph (gq in visual mode) Deleting things. They are stored in an unnamed register \"\" . You can list registers by running :reg(isters) . dw dW dd d^ d$ D Same as d$ d/foo Delete until \"foo\"","title":"Editing"},{"location":"VIM/#registers","text":"A pair of lower-case and upper-case letters refers to the same store. When upper-case is used, the content is appended. :registers List \"[a-zA-Z][dy][ai]<motion> Cut or copy \"[a-z]p Paste \"\" Unnamed register (result of dDxXsScCyY) \"0 Most recently yanked \"1 Most recently deleted","title":"Registers"},{"location":"VIM/#macros","text":"Macros are stored in register. q<reg> Start a macro. Press \"q\" to end. @<reg> Execute the registered macro @@ Repeat last macro","title":"Macros"},{"location":"VIM/#visual-mode","text":"Entering the visual mode v Character-wise V Line-wise C-v Block-wise Selecting. a (around) or i (inside) followed by a motion key. Some examples: vi\" Select what's inside \"...\". It works for parentheses, brackets, and braces. vas Select thr current sentence Text objects. Used after vi , va , or d . p Paragraph s Sentence w Word W Word (space-separated) t HTML tag [({<'\"`>})] Range operations o Move the cursor to the other side d Cut c Cut and enter the insert mode y Copy (yank) P Paste before p Paste after < Indent left > Indent right u Lower-case U Upper-case : /regex/d Delete matched lines","title":"Visual Mode"},{"location":"VIM/#commands","text":"Replace :[range]s/PAT/STR/gc Replace all with each confirmed Delete, move, and copy lines :[range]g/PATTERN/d Delete lines :v/PATTERN/d Delete lines not containing PATTERN :g/PATTERN/t$ Copy lines to EOF :g/PATTERN/m$ Move :g/^/t. Duplicate every line :g/^/m0 Reverse a file","title":"Commands"},{"location":"VIM/#configuration","text":"Use ~/.vimrc or ~/.vim/vimrc .","title":"Configuration"},{"location":"VIM/#status-line","text":"TBW","title":"Status line"},{"location":"VisualStudioCode/","text":"Visual Studio Code Python shift + F12 - show references inline alt + shift + F12 - show references on the side shift + Enter with a selection - pipe to a Python shell","title":"Visual Studio Code"},{"location":"VisualStudioCode/#visual-studio-code","text":"","title":"Visual Studio Code"},{"location":"VisualStudioCode/#python","text":"shift + F12 - show references inline alt + shift + F12 - show references on the side shift + Enter with a selection - pipe to a Python shell","title":"Python"},{"location":"book-notes/Books/","text":"A is For Admission Michele Hernandez The Target Audience A majority of people in the admissions office didn't go to elite schools themselves. They are the ones who read your application. They may not be able to catch subtle cues. Therefore, don't be subtle when writing essays and recommendation letters. Get to the point.","title":"A is For Admission"},{"location":"book-notes/Books/#a-is-for-admission","text":"Michele Hernandez","title":"A is For Admission"},{"location":"book-notes/Books/#the-target-audience","text":"A majority of people in the admissions office didn't go to elite schools themselves. They are the ones who read your application. They may not be able to catch subtle cues. Therefore, don't be subtle when writing essays and recommendation letters. Get to the point.","title":"The Target Audience"},{"location":"game-notes/HollowKnight/","text":"Hollow Knight Kindgom of Hallownest Are the tree-like things interactable? Rancid eggs? Dirtmouth Weapon shop: lantern Lady on east: regret? Forgotten Crossroads Black egg temple? Sobbing sound at the center. Can't reach How to break the ground to get to the crystal world? Key (open slot) to the train? Beat the robot Greenpath Get a charm by passing thorny path Fungal How to reach the opposite side from where the bench and the shop exist? Fog Canyon Find Cornifer. How to cross the black barrier? City of Tears Beat the soul master Howling Cliffs There is a dark area inside","title":"Hollow Knight"},{"location":"game-notes/HollowKnight/#hollow-knight","text":"","title":"Hollow Knight"},{"location":"game-notes/HollowKnight/#kindgom-of-hallownest","text":"Are the tree-like things interactable? Rancid eggs?","title":"Kindgom of Hallownest"},{"location":"game-notes/HollowKnight/#dirtmouth","text":"Weapon shop: lantern Lady on east: regret?","title":"Dirtmouth"},{"location":"game-notes/HollowKnight/#forgotten-crossroads","text":"Black egg temple? Sobbing sound at the center. Can't reach How to break the ground to get to the crystal world? Key (open slot) to the train? Beat the robot","title":"Forgotten Crossroads"},{"location":"game-notes/HollowKnight/#greenpath","text":"Get a charm by passing thorny path","title":"Greenpath"},{"location":"game-notes/HollowKnight/#fungal","text":"How to reach the opposite side from where the bench and the shop exist?","title":"Fungal"},{"location":"game-notes/HollowKnight/#fog-canyon","text":"Find Cornifer. How to cross the black barrier?","title":"Fog Canyon"},{"location":"game-notes/HollowKnight/#city-of-tears","text":"Beat the soul master","title":"City of Tears"},{"location":"game-notes/HollowKnight/#howling-cliffs","text":"There is a dark area inside","title":"Howling Cliffs"},{"location":"game-notes/Poker/","text":"Poker Focusing on Texas Hold'em Dealer button Small blind Big blind Betting Rounds A game has the following betting rounds. Pre-flop - after two hold (or pocket) cards are dealt. The small blind gets the first card. It's going clockwise. Flop - three community cards are dealt, face-up. Turn River Each play can make a choice from the following. Check/call Raise Fold Hand Rankings Straight Flush Four of a kind Full house Flush Straight Three of a kind Two pairs Pair Highcard Vocabulary Draw (on a draw) The nuts A player (hand) is counterfeited. UTG (under the gun) Stack Pot odds Odds against Outs When to Call Pot odds (pot-size : cost-to-call) Odds against (non-outs : outs) Outs Betting 1/2 pot is good because it gives disadvantage to opponents who have a straight or flush draw.","title":"Poker"},{"location":"game-notes/Poker/#poker","text":"Focusing on Texas Hold'em Dealer button Small blind Big blind","title":"Poker"},{"location":"game-notes/Poker/#betting-rounds","text":"A game has the following betting rounds. Pre-flop - after two hold (or pocket) cards are dealt. The small blind gets the first card. It's going clockwise. Flop - three community cards are dealt, face-up. Turn River Each play can make a choice from the following. Check/call Raise Fold","title":"Betting Rounds"},{"location":"game-notes/Poker/#hand-rankings","text":"Straight Flush Four of a kind Full house Flush Straight Three of a kind Two pairs Pair Highcard","title":"Hand Rankings"},{"location":"game-notes/Poker/#vocabulary","text":"Draw (on a draw) The nuts A player (hand) is counterfeited. UTG (under the gun) Stack Pot odds Odds against Outs","title":"Vocabulary"},{"location":"game-notes/Poker/#when-to-call","text":"Pot odds (pot-size : cost-to-call) Odds against (non-outs : outs) Outs Betting 1/2 pot is good because it gives disadvantage to opponents who have a straight or flush draw.","title":"When to Call"},{"location":"quant-notes/Options/","text":"Options Option Greeks Delta ($/$). Can be viewed as the probability the option expires in the money. The number is positive for calls and negative for puts. Gamma (1/$). The derivative of the delta. The number is always positive. Theta ($/day). T is for time. How much does the option lose the value in a day? The number is always negative. Vega ($/%). V is for volatility. Rho. R is for rate. Has to do with interest rate. Usually ignored for short-horizon options. Volatility Typically, it's defined as the annualized percent change.","title":"Options"},{"location":"quant-notes/Options/#options","text":"","title":"Options"},{"location":"quant-notes/Options/#option-greeks","text":"Delta ($/$). Can be viewed as the probability the option expires in the money. The number is positive for calls and negative for puts. Gamma (1/$). The derivative of the delta. The number is always positive. Theta ($/day). T is for time. How much does the option lose the value in a day? The number is always negative. Vega ($/%). V is for volatility. Rho. R is for rate. Has to do with interest rate. Usually ignored for short-horizon options.","title":"Option Greeks"},{"location":"quant-notes/Options/#volatility","text":"Typically, it's defined as the annualized percent change.","title":"Volatility"},{"location":"quant-notes/Quantopian/","text":"Quantopian Pipeline quantopian.pipeline.Pipeline run_pipeline() in research quantopian.algorithm.attach_pipeline() in sim Pipeline computations - Factors, Filters, and Classifiers DataSet - (e.g., USEquityPricing and Fundamentals) BoundColumn - a column bound to a dataset. (e.g., USEquityPricing.close) dtype of a BoundColumn Partner Data - in quantopian.pipeline.data quantopian.pipeline.CustomFactor Quantopian IDE import quantopian.algorithm as algo def initialize ( context ): schedule_function ( func , date_rule , time_rule ) pipe = make_pipeline () algo . attach_pipeline ( pipe , 'pipe' ) def make_pipeline (): pipe = Pipeline () ... return pipe def before_trading_start ( context , data ): # Read the pipelines and write to context. # You can use data, which seems to provide helper functions. context . output = algo . pipeline_output ( 'pipe_name' )","title":"Quantopian"},{"location":"quant-notes/Quantopian/#quantopian-pipeline","text":"quantopian.pipeline.Pipeline run_pipeline() in research quantopian.algorithm.attach_pipeline() in sim Pipeline computations - Factors, Filters, and Classifiers DataSet - (e.g., USEquityPricing and Fundamentals) BoundColumn - a column bound to a dataset. (e.g., USEquityPricing.close) dtype of a BoundColumn Partner Data - in quantopian.pipeline.data quantopian.pipeline.CustomFactor","title":"Quantopian Pipeline"},{"location":"quant-notes/Quantopian/#quantopian-ide","text":"import quantopian.algorithm as algo def initialize ( context ): schedule_function ( func , date_rule , time_rule ) pipe = make_pipeline () algo . attach_pipeline ( pipe , 'pipe' ) def make_pipeline (): pipe = Pipeline () ... return pipe def before_trading_start ( context , data ): # Read the pipelines and write to context. # You can use data, which seems to provide helper functions. context . output = algo . pipeline_output ( 'pipe_name' )","title":"Quantopian IDE"},{"location":"tech-notes/Kubernetes/","text":"Kubernetes Tutorial for Beginners TechWorld with Nana: https://youtube.com/watch?v=X48VuDVv0do K8S Components Pod Wrapper of a container, though it can wrap multiple containers Has its own IP address, which is internal and ephemeral. Replica Set Deployment StatefulSet Service Represents a permanent IP address Works as a load balancer Endpoint Represents the endpoint of a pod; that is, where the service is forwarded to. Ingress Volume ConfigMap Secret K8S Architecture (Worker) Node Container runtime Kubelet Kube Proxy Master (Node) API server Scheduler Controller manager Etcd K8S Configuration Files kind metadata spec Labels and Selectors Labels are defined in the metadata section while selectors are defined in spec . Labels are simply key-value pairs. Minikube minikube start --vm-driver=hyperkit Demo To make a service externally available, specify spec.type: LoadBalancer and spec.ports.nodePort: <n> . Namespaces Virtual cluster Limit resources per namespace Use kubens to set the default namespace. Questions Where are the logs stored (as read by kubectl logs )? Do they grow indefinitely? How should we store secret.yaml? The base64 encoding isn't secure. Does the selector in a service match with deployments' labels, pods' labels, or both? Kubernetes Cluster Node is basically a host. A cluster has many nodes. Kubernetes Objects Pod - a group of one or more containers. The smallest unit of deployment. In production, you are likely to use deployments instead of pods. Deployment - a set of identical pods. Service - an abstraction. Pods can come and go. Services stay. It defines the stable IP of the service. Volume - \"disk\" within a pod Namespace - virtual cluster Components API server Etcd. Key-value store. Scheduler Controller Container runtime. Like Docker. Kubelet. Agent on each node. Kubectl Cheat Sheet source <(kubectl completion zsh) gcloud --project <project> container clusters get-credentials <cluster> --zone <cc-rrr1-a> kubectl config use-context <cluster-name> kubectl create -f <yml> kubectl replace -f <yml> kubectl scale -repl kubectl get pods kubectl get all GKE Load Balancer https://cloud.google.com/kubernetes-engine/docs/tutorials/http-balancer kind: Ingress creates an external HTTP(S) load balancer. The ingress references a service of type NodePort . This option is what you normally want to expose the service to the world. kind: Service with type: LoadBalancer creates a network load balancer, an external one by default. For an internal load balancer, you need to add networking.gke.io/load-balancer-type: \"Internal\" .","title":"Kubernetes Tutorial for Beginners"},{"location":"tech-notes/Kubernetes/#kubernetes-tutorial-for-beginners","text":"TechWorld with Nana: https://youtube.com/watch?v=X48VuDVv0do","title":"Kubernetes Tutorial for Beginners"},{"location":"tech-notes/Kubernetes/#k8s-components","text":"Pod Wrapper of a container, though it can wrap multiple containers Has its own IP address, which is internal and ephemeral. Replica Set Deployment StatefulSet Service Represents a permanent IP address Works as a load balancer Endpoint Represents the endpoint of a pod; that is, where the service is forwarded to. Ingress Volume ConfigMap Secret","title":"K8S Components"},{"location":"tech-notes/Kubernetes/#k8s-architecture","text":"(Worker) Node Container runtime Kubelet Kube Proxy Master (Node) API server Scheduler Controller manager Etcd","title":"K8S Architecture"},{"location":"tech-notes/Kubernetes/#k8s-configuration-files","text":"kind metadata spec","title":"K8S Configuration Files"},{"location":"tech-notes/Kubernetes/#labels-and-selectors","text":"Labels are defined in the metadata section while selectors are defined in spec . Labels are simply key-value pairs.","title":"Labels and Selectors"},{"location":"tech-notes/Kubernetes/#minikube","text":"minikube start --vm-driver=hyperkit","title":"Minikube"},{"location":"tech-notes/Kubernetes/#demo","text":"To make a service externally available, specify spec.type: LoadBalancer and spec.ports.nodePort: <n> .","title":"Demo"},{"location":"tech-notes/Kubernetes/#namespaces","text":"Virtual cluster Limit resources per namespace Use kubens to set the default namespace.","title":"Namespaces"},{"location":"tech-notes/Kubernetes/#questions","text":"Where are the logs stored (as read by kubectl logs )? Do they grow indefinitely? How should we store secret.yaml? The base64 encoding isn't secure. Does the selector in a service match with deployments' labels, pods' labels, or both?","title":"Questions"},{"location":"tech-notes/Kubernetes/#kubernetes","text":"Cluster Node is basically a host. A cluster has many nodes.","title":"Kubernetes"},{"location":"tech-notes/Kubernetes/#kubernetes-objects","text":"Pod - a group of one or more containers. The smallest unit of deployment. In production, you are likely to use deployments instead of pods. Deployment - a set of identical pods. Service - an abstraction. Pods can come and go. Services stay. It defines the stable IP of the service. Volume - \"disk\" within a pod Namespace - virtual cluster","title":"Kubernetes Objects"},{"location":"tech-notes/Kubernetes/#components","text":"API server Etcd. Key-value store. Scheduler Controller Container runtime. Like Docker. Kubelet. Agent on each node.","title":"Components"},{"location":"tech-notes/Kubernetes/#kubectl-cheat-sheet","text":"source <(kubectl completion zsh) gcloud --project <project> container clusters get-credentials <cluster> --zone <cc-rrr1-a> kubectl config use-context <cluster-name> kubectl create -f <yml> kubectl replace -f <yml> kubectl scale -repl kubectl get pods kubectl get all","title":"Kubectl Cheat Sheet"},{"location":"tech-notes/Kubernetes/#gke","text":"","title":"GKE"},{"location":"tech-notes/Kubernetes/#load-balancer","text":"https://cloud.google.com/kubernetes-engine/docs/tutorials/http-balancer kind: Ingress creates an external HTTP(S) load balancer. The ingress references a service of type NodePort . This option is what you normally want to expose the service to the world. kind: Service with type: LoadBalancer creates a network load balancer, an external one by default. For an internal load balancer, you need to add networking.gke.io/load-balancer-type: \"Internal\" .","title":"Load Balancer"},{"location":"webdev-notes/React/","text":"Resources https://github.com/piotrwitek/react-redux-typescript-guide shows how to use React and Redux in TypeScript. React Main Concepts Based on React Main Concepts . JSX A JSX expression is compiled to React.createElement() call. const element = ( <h1 className=\"greeting\"> Hello, world! </h1> ); const element = React.createElement( 'h1', {className: 'greeting'}, 'Hello, world!' ); The element is essentially a JavaScript object. // Note: this structure is simplified const element = { type : 'h1' , props : { className : 'greeting' , children : 'Hello, world!' } }; Rendering ReactDOM.render(<App/>, document.getElementById('root')); children is a special property that refers to children elements. It is useful for a component that doesn't know its children in advance. function FancyBorder(props) { return ( <div className={'FancyBorder FancyBorder-' + props.color}> {props.children} </div> ); } If the structure is more complex than children can solve, you can pass React elements as follows. function SplitPane(props) { return ( <div className=\"SplitPane\"> <div className=\"SplitPane-left\"> {props.left} </div> <div className=\"SplitPane-right\"> {props.right} </div> </div> ); } function App() { return ( <SplitPane left={ <Contacts /> } right={ <Chat /> } /> ); } State Only in the constructor, the value can be assigned to this.state directly. Elsewhere, you must use this.setState({someState: newValue}) . The argument in setState() represents partial state. That means, it merges the argument into the state, as opposed to replacing it. setState() is executed asynchronously. If state and props are referenced in setState() , you must pass an update function (state, props) => ({...}) . // Wrong this . setState ({ counter : this.state.counter + this . props . increment , }); // Correct this . setState (( state , props ) => ({ counter : state.counter + props . increment })); Lifting state up Normally, state should remain local. Sometimes, however, the states that would be spread over descendents must be collected at an ancestor to maintain the single source of truth. This process is called \"lifting state up\". Lifting state up is done as follows: Define the handlers at the ancestor Pass them to children as props Call them in the children when their state changes. class Calculator extends React.Component { constructor(props) { super(props); this.handleCelsiusChange = this.handleCelsiusChange.bind(this); this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this); this.state = {temperature: '', scale: 'c'}; } handleCelsiusChange(temperature) { this.setState({scale: 'c', temperature}); } handleFahrenheitChange(temperature) { this.setState({scale: 'f', temperature}); } render() { const scale = this.state.scale; const temperature = this.state.temperature; const celsius = scale === 'f' ? tryConvert(temperature, toCelsius) : temperature; const fahrenheit = scale === 'c' ? tryConvert(temperature, toFahrenheit) : temperature; return ( <div> <TemperatureInput scale=\"c\" temperature={celsius} onTemperatureChange={this.handleCelsiusChange} /> <TemperatureInput scale=\"f\" temperature={fahrenheit} onTemperatureChange={this.handleFahrenheitChange} /> <BoilingVerdict celsius={parseFloat(celsius)} /> </div> ); } } class TemperatureInput extends React.Component { constructor(props) { super(props); this.handleChange = this.handleChange.bind(this); } handleChange(e) { this.props.onTemperatureChange(e.target.value); } render() { const temperature = this.props.temperature; const scale = this.props.scale; return ( <fieldset> <legend>Enter temperature in {scaleNames[scale]}:</legend> <input value={temperature} onChange={this.handleChange} /> </fieldset> ); } } Lifecycle Use useEffect() in function components instead. class Clock extends React.Component { constructor(props) { super(props); this.state = {date: new Date()}; } componentDidMount() { this.timerID = setInterval( () => this.tick(), 1000 ); } componentWillUnmount() { clearInterval(this.timerID); } tick() { this.setState({ date: new Date() }); } render() { return ( <div> <h1>Hello, world!</h1> <h2>It is {this.state.date.toLocaleTimeString()}.</h2> </div> ); } } ReactDOM.render( <Clock />, document.getElementById('root') ); Event Handling Returning false in an event handler doesn't take effect. To stop the event propagation, e.preventDefault() must be called. Just like React uses virtual DOM objects, the event handler receives virtual events called SyntheticEvent . function ActionLink() { function handleClick(e) { e.preventDefault(); console.log('The link was clicked.'); } return ( <a href=\"#\" onClick={handleClick}> Click me </a> ); } A handler is typically a method. The method needs to be bound ( this.xxx.bind(this) ) to work properly. this in JavaScript is so error-prone. Learn how to use bind here . class Toggle extends React.Component { constructor(props) { super(props); this.state = {isToggleOn: true}; // This binding is necessary to make `this` work in the callback this.handleClick = this.handleClick.bind(this); } handleClick() { this.setState(state => ({ isToggleOn: !state.isToggleOn })); } render() { return ( <button onClick={this.handleClick}> {this.state.isToggleOn ? 'ON' : 'OFF'} </button> ); } } ReactDOM.render( <Toggle />, document.getElementById('root') ); Be careful with using an arrow function as a handler. While there is no need to bind this , the handler is instantiated each time it is rendered. If the descendent is big, it can slow down. class LoggingButton extends React.Component { handleClick() { console.log('this is:', this); } render() { // This syntax ensures `this` is bound within handleClick return ( <button onClick={() => this.handleClick()}> Click me </button> ); } } A way to avoid binding is to use a public class field, which is an experimental feature. class LoggingButton extends React.Component { // This syntax ensures `this` is bound within handleClick. // Warning: this is *experimental* syntax. handleClick = () => { console.log('this is:', this); } render() { return ( <button onClick={this.handleClick}> Click me </button> ); } } Passing extra arguments to the handler. // Two functionally equivalent forms <button onClick={(e) => this.deleteRow(id, e)}>Delete Row</button> <button onClick={this.deleteRow.bind(this, id)}>Delete Row</button> render() can return null to hide the element. While the lifecycle methods (mounts) are not called, componentDidUpdate is. Forms Controlled components - making the React state be the single source of truth. In HTML, <textarea> has the text defined as a child. In React, it has a value prop. In HTML, <option> can have the selected attribute. In React, <select> has value . To make multiple options selected, do something like <select multiple={true} value={['B', 'C']}> . To use a single handler for multiple elements, use event.target.name in the handler to identify the source element. The element must provide the name prop. Consider using Formik to build complex forms. Use ES6 computed property name. this . setState ({ [ name ] : value }); React Advanced Guides Context Elements of context Create a Context object Capitalize the name. defaultValue is used when a component does not find a matching provider. const MyContext = React . createContext ( defaultValue ); Provide the context Provider is a component defined in every Context object. All descendant consumers will re-render whenever the value changes, even if an ancestor skips an update. <MyContext.Provider value={...}> Consume the context In class components, set contextType in consumers and use this.context to reference the context. class MyComponent extends React . Component { ... } MyComponent . contextType = MyContext ; // OR class MyComponent extends React . Component { static contextType = MyContext ; ... } In function components, use the following. <MyContext.Consumer> {value => /* render something based on the context value */} </MyContext.Consumer> // OR const context = useContext(MyContext); You can set MyContext.displayName to a string to be display in the DevTools. // Context lets us pass a value deep into the component tree // without explicitly threading it through every component. // Create a context for the current theme (with \"light\" as the default). const ThemeContext = React.createContext('light'); class App extends React.Component { render() { // Use a Provider to pass the current theme to the tree below. // Any component can read it, no matter how deep it is. // In this example, we're passing \"dark\" as the current value. return ( <ThemeContext.Provider value=\"dark\"> <Toolbar /> </ThemeContext.Provider> ); } } // A component in the middle doesn't have to // pass the theme down explicitly anymore. function Toolbar() { return ( <div> <ThemedButton /> </div> ); } class ThemedButton extends React.Component { // Assign a contextType to read the current theme context. // React will find the closest theme Provider above and use its value. // In this example, the current theme is \"dark\". static contextType = ThemeContext; render() { return <Button theme={this.context} />; } } Use it judiciously, as the context makes components less reusable. You can use the dependency injection technique to avoid using the context. That is, you can build components up in the hierarchy and pass them down as props, so you can avoid passing down the props that would be need to build those components. Other topics React.Fragment React.StrictMode - only active in the development mode. Hooks The purpose of hooks is to use the state and other features in the function components. With hooks, you can avoid extending the Component class in most cases. Hooks are functions. The name of a hook should start with \"use\". Calling rules. The following rules are to ensure that all the hooks are called in the same order each time the same element is rendered. The rules are due to the React Hook implementation. Do not call hooks inside loops, conditions, or nested functions. Do not call hooks outside function components or custom hooks. useState Unlike this.setState() , the setter replaces the old value instead of merging into it. How is useState() implemented? How do \"state variables\" carry the state across function calls? useEffect You can think of useEffect Hook as componentDidMount, componentDidUpdate, and componentWillUnmount combined. The argument function runs after every rendering. Notice that the argument function is different everytime so that it reads the state correctly. Use useLayoutEffect if you'd like the effect to happen synchronously with the render. To make the effect function re-run only if the state has changed, specify the list of state variables in the second parameter of useEffect() . useContext function Example () { const locale = useContext ( LocaleContext ); const theme = useContext ( ThemeContext ); ... } useReducer function Todos () { const [ todos , dispatch ] = useReducer ( todosReducer ); ... } useMemo Call the first argument only if the second argument elements have changed. const memoizedValue = useMemo (() => computeExpensiveValue ( a , b ), [ a , b ]); Custom Hooks Start the function name with \"use\". Otherwise, the linter would not detect the violation of the hook-calling rules. Traditionally, two techniques, higher-order components and render props, were used to avoid duplicate code and make components reusable. Custom hooks can replace them while reducing the complexity. Function components React.memo(FC) - similar to React.PureComponent .","title":"React"},{"location":"webdev-notes/React/#resources","text":"https://github.com/piotrwitek/react-redux-typescript-guide shows how to use React and Redux in TypeScript.","title":"Resources"},{"location":"webdev-notes/React/#react-main-concepts","text":"Based on React Main Concepts .","title":"React Main Concepts"},{"location":"webdev-notes/React/#jsx","text":"A JSX expression is compiled to React.createElement() call. const element = ( <h1 className=\"greeting\"> Hello, world! </h1> ); const element = React.createElement( 'h1', {className: 'greeting'}, 'Hello, world!' ); The element is essentially a JavaScript object. // Note: this structure is simplified const element = { type : 'h1' , props : { className : 'greeting' , children : 'Hello, world!' } };","title":"JSX"},{"location":"webdev-notes/React/#rendering","text":"ReactDOM.render(<App/>, document.getElementById('root')); children is a special property that refers to children elements. It is useful for a component that doesn't know its children in advance. function FancyBorder(props) { return ( <div className={'FancyBorder FancyBorder-' + props.color}> {props.children} </div> ); } If the structure is more complex than children can solve, you can pass React elements as follows. function SplitPane(props) { return ( <div className=\"SplitPane\"> <div className=\"SplitPane-left\"> {props.left} </div> <div className=\"SplitPane-right\"> {props.right} </div> </div> ); } function App() { return ( <SplitPane left={ <Contacts /> } right={ <Chat /> } /> ); }","title":"Rendering"},{"location":"webdev-notes/React/#state","text":"Only in the constructor, the value can be assigned to this.state directly. Elsewhere, you must use this.setState({someState: newValue}) . The argument in setState() represents partial state. That means, it merges the argument into the state, as opposed to replacing it. setState() is executed asynchronously. If state and props are referenced in setState() , you must pass an update function (state, props) => ({...}) . // Wrong this . setState ({ counter : this.state.counter + this . props . increment , }); // Correct this . setState (( state , props ) => ({ counter : state.counter + props . increment }));","title":"State"},{"location":"webdev-notes/React/#lifting-state-up","text":"Normally, state should remain local. Sometimes, however, the states that would be spread over descendents must be collected at an ancestor to maintain the single source of truth. This process is called \"lifting state up\". Lifting state up is done as follows: Define the handlers at the ancestor Pass them to children as props Call them in the children when their state changes. class Calculator extends React.Component { constructor(props) { super(props); this.handleCelsiusChange = this.handleCelsiusChange.bind(this); this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this); this.state = {temperature: '', scale: 'c'}; } handleCelsiusChange(temperature) { this.setState({scale: 'c', temperature}); } handleFahrenheitChange(temperature) { this.setState({scale: 'f', temperature}); } render() { const scale = this.state.scale; const temperature = this.state.temperature; const celsius = scale === 'f' ? tryConvert(temperature, toCelsius) : temperature; const fahrenheit = scale === 'c' ? tryConvert(temperature, toFahrenheit) : temperature; return ( <div> <TemperatureInput scale=\"c\" temperature={celsius} onTemperatureChange={this.handleCelsiusChange} /> <TemperatureInput scale=\"f\" temperature={fahrenheit} onTemperatureChange={this.handleFahrenheitChange} /> <BoilingVerdict celsius={parseFloat(celsius)} /> </div> ); } } class TemperatureInput extends React.Component { constructor(props) { super(props); this.handleChange = this.handleChange.bind(this); } handleChange(e) { this.props.onTemperatureChange(e.target.value); } render() { const temperature = this.props.temperature; const scale = this.props.scale; return ( <fieldset> <legend>Enter temperature in {scaleNames[scale]}:</legend> <input value={temperature} onChange={this.handleChange} /> </fieldset> ); } }","title":"Lifting state up"},{"location":"webdev-notes/React/#lifecycle","text":"Use useEffect() in function components instead. class Clock extends React.Component { constructor(props) { super(props); this.state = {date: new Date()}; } componentDidMount() { this.timerID = setInterval( () => this.tick(), 1000 ); } componentWillUnmount() { clearInterval(this.timerID); } tick() { this.setState({ date: new Date() }); } render() { return ( <div> <h1>Hello, world!</h1> <h2>It is {this.state.date.toLocaleTimeString()}.</h2> </div> ); } } ReactDOM.render( <Clock />, document.getElementById('root') );","title":"Lifecycle"},{"location":"webdev-notes/React/#event-handling","text":"Returning false in an event handler doesn't take effect. To stop the event propagation, e.preventDefault() must be called. Just like React uses virtual DOM objects, the event handler receives virtual events called SyntheticEvent . function ActionLink() { function handleClick(e) { e.preventDefault(); console.log('The link was clicked.'); } return ( <a href=\"#\" onClick={handleClick}> Click me </a> ); } A handler is typically a method. The method needs to be bound ( this.xxx.bind(this) ) to work properly. this in JavaScript is so error-prone. Learn how to use bind here . class Toggle extends React.Component { constructor(props) { super(props); this.state = {isToggleOn: true}; // This binding is necessary to make `this` work in the callback this.handleClick = this.handleClick.bind(this); } handleClick() { this.setState(state => ({ isToggleOn: !state.isToggleOn })); } render() { return ( <button onClick={this.handleClick}> {this.state.isToggleOn ? 'ON' : 'OFF'} </button> ); } } ReactDOM.render( <Toggle />, document.getElementById('root') ); Be careful with using an arrow function as a handler. While there is no need to bind this , the handler is instantiated each time it is rendered. If the descendent is big, it can slow down. class LoggingButton extends React.Component { handleClick() { console.log('this is:', this); } render() { // This syntax ensures `this` is bound within handleClick return ( <button onClick={() => this.handleClick()}> Click me </button> ); } } A way to avoid binding is to use a public class field, which is an experimental feature. class LoggingButton extends React.Component { // This syntax ensures `this` is bound within handleClick. // Warning: this is *experimental* syntax. handleClick = () => { console.log('this is:', this); } render() { return ( <button onClick={this.handleClick}> Click me </button> ); } } Passing extra arguments to the handler. // Two functionally equivalent forms <button onClick={(e) => this.deleteRow(id, e)}>Delete Row</button> <button onClick={this.deleteRow.bind(this, id)}>Delete Row</button> render() can return null to hide the element. While the lifecycle methods (mounts) are not called, componentDidUpdate is.","title":"Event Handling"},{"location":"webdev-notes/React/#forms","text":"Controlled components - making the React state be the single source of truth. In HTML, <textarea> has the text defined as a child. In React, it has a value prop. In HTML, <option> can have the selected attribute. In React, <select> has value . To make multiple options selected, do something like <select multiple={true} value={['B', 'C']}> . To use a single handler for multiple elements, use event.target.name in the handler to identify the source element. The element must provide the name prop. Consider using Formik to build complex forms. Use ES6 computed property name. this . setState ({ [ name ] : value });","title":"Forms"},{"location":"webdev-notes/React/#react-advanced-guides","text":"","title":"React Advanced Guides"},{"location":"webdev-notes/React/#context","text":"","title":"Context"},{"location":"webdev-notes/React/#elements-of-context","text":"","title":"Elements of context"},{"location":"webdev-notes/React/#create-a-context-object","text":"Capitalize the name. defaultValue is used when a component does not find a matching provider. const MyContext = React . createContext ( defaultValue );","title":"Create a Context object"},{"location":"webdev-notes/React/#provide-the-context","text":"Provider is a component defined in every Context object. All descendant consumers will re-render whenever the value changes, even if an ancestor skips an update. <MyContext.Provider value={...}>","title":"Provide the context"},{"location":"webdev-notes/React/#consume-the-context","text":"In class components, set contextType in consumers and use this.context to reference the context. class MyComponent extends React . Component { ... } MyComponent . contextType = MyContext ; // OR class MyComponent extends React . Component { static contextType = MyContext ; ... } In function components, use the following. <MyContext.Consumer> {value => /* render something based on the context value */} </MyContext.Consumer> // OR const context = useContext(MyContext); You can set MyContext.displayName to a string to be display in the DevTools. // Context lets us pass a value deep into the component tree // without explicitly threading it through every component. // Create a context for the current theme (with \"light\" as the default). const ThemeContext = React.createContext('light'); class App extends React.Component { render() { // Use a Provider to pass the current theme to the tree below. // Any component can read it, no matter how deep it is. // In this example, we're passing \"dark\" as the current value. return ( <ThemeContext.Provider value=\"dark\"> <Toolbar /> </ThemeContext.Provider> ); } } // A component in the middle doesn't have to // pass the theme down explicitly anymore. function Toolbar() { return ( <div> <ThemedButton /> </div> ); } class ThemedButton extends React.Component { // Assign a contextType to read the current theme context. // React will find the closest theme Provider above and use its value. // In this example, the current theme is \"dark\". static contextType = ThemeContext; render() { return <Button theme={this.context} />; } } Use it judiciously, as the context makes components less reusable. You can use the dependency injection technique to avoid using the context. That is, you can build components up in the hierarchy and pass them down as props, so you can avoid passing down the props that would be need to build those components.","title":"Consume the context"},{"location":"webdev-notes/React/#other-topics","text":"React.Fragment React.StrictMode - only active in the development mode.","title":"Other topics"},{"location":"webdev-notes/React/#hooks","text":"The purpose of hooks is to use the state and other features in the function components. With hooks, you can avoid extending the Component class in most cases. Hooks are functions. The name of a hook should start with \"use\". Calling rules. The following rules are to ensure that all the hooks are called in the same order each time the same element is rendered. The rules are due to the React Hook implementation. Do not call hooks inside loops, conditions, or nested functions. Do not call hooks outside function components or custom hooks.","title":"Hooks"},{"location":"webdev-notes/React/#usestate","text":"Unlike this.setState() , the setter replaces the old value instead of merging into it. How is useState() implemented? How do \"state variables\" carry the state across function calls?","title":"useState"},{"location":"webdev-notes/React/#useeffect","text":"You can think of useEffect Hook as componentDidMount, componentDidUpdate, and componentWillUnmount combined. The argument function runs after every rendering. Notice that the argument function is different everytime so that it reads the state correctly. Use useLayoutEffect if you'd like the effect to happen synchronously with the render. To make the effect function re-run only if the state has changed, specify the list of state variables in the second parameter of useEffect() .","title":"useEffect"},{"location":"webdev-notes/React/#usecontext","text":"function Example () { const locale = useContext ( LocaleContext ); const theme = useContext ( ThemeContext ); ... }","title":"useContext"},{"location":"webdev-notes/React/#usereducer","text":"function Todos () { const [ todos , dispatch ] = useReducer ( todosReducer ); ... }","title":"useReducer"},{"location":"webdev-notes/React/#usememo","text":"Call the first argument only if the second argument elements have changed. const memoizedValue = useMemo (() => computeExpensiveValue ( a , b ), [ a , b ]);","title":"useMemo"},{"location":"webdev-notes/React/#custom-hooks","text":"Start the function name with \"use\". Otherwise, the linter would not detect the violation of the hook-calling rules. Traditionally, two techniques, higher-order components and render props, were used to avoid duplicate code and make components reusable. Custom hooks can replace them while reducing the complexity.","title":"Custom Hooks"},{"location":"webdev-notes/React/#function-components","text":"React.memo(FC) - similar to React.PureComponent .","title":"Function components"},{"location":"webdev-notes/Redux/","text":"Redux Redux is used to manage the global state of the application. Concepts in Redux A reducer is a function that takes the current state and the action as arguments and returns a new state. reducer : ( state , action ) => state A store is created with a reducer. store = createStore ( reducer ); Or more often as follows: store = createStore ( combineReducers ({ reducer1 , reducer2 , ... })); The store provides three methods. store . getState () store . dispatch ( action ) store . subscribe ( void => ()) React Redux https://blog.isquaredsoftware.com/2018/11/react-redux-history-implementation/ Using Provider The Provider sticks the store in the React context. import React from 'react' import ReactDOM from 'react-dom' import { Provider } from 'react-redux' import store from './store' import App from './App' ReactDOM . render ( < Provider store = { store } > < App /> < /Provider>, document . getElementById ( 'root' ) ) Using connect() connect means connecting a component to the provided store. props.dispatch is available on a connected component. import { connect } from 'react-redux' import { increment , decrement , reset } from './actionCreators' // const Counter = ... const mapStateToProps = ( state /*, ownProps*/ ) => { return { counter : state.counter } } // While it can be a function mapping dispatch to props, it is often an object. Each value of the object is an // action creator (i.e., function returning an action). const mapDispatchToProps = { increment , decrement , reset } export default connect ( mapStateToProps , mapDispatchToProps )( Counter ) Redux in TypeScript File Organization store + reducers - some_slice_name.ts - another_slice_name.ts - last_slice_name.ts - index.ts - actions.ts - index.ts store/index.ts It defines: Root reducer Type of the root state Typed selector hook Store (with visualizer in dev mode) import { combineReducers , createStore } from 'redux' import { useSelector as useRawSelector , TypedUseSelectorHook } from 'react-redux' import { devToolsEnhancer } from 'redux-devtools-extension/developmentOnly' import { } const rootReducer = combineReducers ({ some_slice_name , another_slice_name }) export type RootState = ReturnType < typeof rootReducer > // Used in components export const useSelector : TypedUseSelectorHook < RootState > = useRawSelector // Used in Provider that wraps App export default createStore ( rootReducer , devToolsEnhancer ({})) store/actions.ts It defines: Action string constants Action types, including the union AppAction Action-creating functions // Action type constants export const LOAD_DATA = 'LOAD_DATA' export const CHANGE_NAME = 'CHANGE_NAME' // Action types interface LoadDataAction { type : typeof LOAD_DATA data : Data [] } interface ChangeNameAction { type : typeof CHANGE_NAME name : string } // Used in reducers export type AppAction = LoadDataAction | ChangeNameAction // Action creators export const loadData = ( data : Data []) : LoadDataAction => { return { type : LOAD_DATA data } } export const changeName = ( name : string ) : ChangeNameAction => { return { type : CHANGE_NAME name } } Reducers Each reducer defines: Type of the slice for which it is responsible Its inital value Reducer function, named after the slice. import { AppAction , CHANGE_NAME } from '../actions' interface SliceState { name : string } const initialValue : SliceState = { name : '' } export const name = ( state = initialValue , action : AppAction ) => { switch ( action . type ) { case CHANGE_NAME : return { name : action.name } default : return state } } Components import React , { FC } from 'react' import { useSelector } from '../store' interface Props { a : string b : int } const SomeComponent : FC < Props > = ({ a , b }) => { const name = useSelector ( s => s . name ) return ( < SubComponent ... /> ) } export default SomeComponent","title":"Redux"},{"location":"webdev-notes/Redux/#redux","text":"Redux is used to manage the global state of the application.","title":"Redux"},{"location":"webdev-notes/Redux/#concepts-in-redux","text":"A reducer is a function that takes the current state and the action as arguments and returns a new state. reducer : ( state , action ) => state A store is created with a reducer. store = createStore ( reducer ); Or more often as follows: store = createStore ( combineReducers ({ reducer1 , reducer2 , ... })); The store provides three methods. store . getState () store . dispatch ( action ) store . subscribe ( void => ())","title":"Concepts in Redux"},{"location":"webdev-notes/Redux/#react-redux","text":"https://blog.isquaredsoftware.com/2018/11/react-redux-history-implementation/","title":"React Redux"},{"location":"webdev-notes/Redux/#using-provider","text":"The Provider sticks the store in the React context. import React from 'react' import ReactDOM from 'react-dom' import { Provider } from 'react-redux' import store from './store' import App from './App' ReactDOM . render ( < Provider store = { store } > < App /> < /Provider>, document . getElementById ( 'root' ) )","title":"Using Provider"},{"location":"webdev-notes/Redux/#using-connect","text":"connect means connecting a component to the provided store. props.dispatch is available on a connected component. import { connect } from 'react-redux' import { increment , decrement , reset } from './actionCreators' // const Counter = ... const mapStateToProps = ( state /*, ownProps*/ ) => { return { counter : state.counter } } // While it can be a function mapping dispatch to props, it is often an object. Each value of the object is an // action creator (i.e., function returning an action). const mapDispatchToProps = { increment , decrement , reset } export default connect ( mapStateToProps , mapDispatchToProps )( Counter )","title":"Using connect()"},{"location":"webdev-notes/Redux/#redux-in-typescript","text":"","title":"Redux in TypeScript"},{"location":"webdev-notes/Redux/#file-organization","text":"store + reducers - some_slice_name.ts - another_slice_name.ts - last_slice_name.ts - index.ts - actions.ts - index.ts","title":"File Organization"},{"location":"webdev-notes/Redux/#storeindexts","text":"It defines: Root reducer Type of the root state Typed selector hook Store (with visualizer in dev mode) import { combineReducers , createStore } from 'redux' import { useSelector as useRawSelector , TypedUseSelectorHook } from 'react-redux' import { devToolsEnhancer } from 'redux-devtools-extension/developmentOnly' import { } const rootReducer = combineReducers ({ some_slice_name , another_slice_name }) export type RootState = ReturnType < typeof rootReducer > // Used in components export const useSelector : TypedUseSelectorHook < RootState > = useRawSelector // Used in Provider that wraps App export default createStore ( rootReducer , devToolsEnhancer ({}))","title":"store/index.ts"},{"location":"webdev-notes/Redux/#storeactionsts","text":"It defines: Action string constants Action types, including the union AppAction Action-creating functions // Action type constants export const LOAD_DATA = 'LOAD_DATA' export const CHANGE_NAME = 'CHANGE_NAME' // Action types interface LoadDataAction { type : typeof LOAD_DATA data : Data [] } interface ChangeNameAction { type : typeof CHANGE_NAME name : string } // Used in reducers export type AppAction = LoadDataAction | ChangeNameAction // Action creators export const loadData = ( data : Data []) : LoadDataAction => { return { type : LOAD_DATA data } } export const changeName = ( name : string ) : ChangeNameAction => { return { type : CHANGE_NAME name } }","title":"store/actions.ts"},{"location":"webdev-notes/Redux/#reducers","text":"Each reducer defines: Type of the slice for which it is responsible Its inital value Reducer function, named after the slice. import { AppAction , CHANGE_NAME } from '../actions' interface SliceState { name : string } const initialValue : SliceState = { name : '' } export const name = ( state = initialValue , action : AppAction ) => { switch ( action . type ) { case CHANGE_NAME : return { name : action.name } default : return state } }","title":"Reducers"},{"location":"webdev-notes/Redux/#components","text":"import React , { FC } from 'react' import { useSelector } from '../store' interface Props { a : string b : int } const SomeComponent : FC < Props > = ({ a , b }) => { const name = useSelector ( s => s . name ) return ( < SubComponent ... /> ) } export default SomeComponent","title":"Components"}]}